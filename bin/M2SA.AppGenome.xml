<?xml version="1.0"?>
<doc>
    <assembly>
        <name>M2SA.AppGenome</name>
    </assembly>
    <members>
        <member name="T:M2SA.AppGenome.AppConfig">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.AppConfig.AppGenomeKey">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.AppConfig.AppBaseKey">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.AppConfig.ObjectIOCKey">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.AppConfig.LoggingKey">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.AppConfig.CachedKey">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.AppConfig.QueuesKey">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.AppConfig.ExceptionHandlingKey">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.AppConfig.DefaultKey">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.AppConfig.SrongNameSequence">
            <summary>
            配置节点为Map类型，默认的Key节点名称
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.AppConfig.AppName">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.AppConfig.Debug">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.AppConfig.Modules">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.AppConfig.TypeAliases">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.AppConfig.ThreadPool">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.AppConfig.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.AppConfig.Initialize(M2SA.AppGenome.Configuration.IConfigNode)">
            <summary>
            
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:M2SA.AppGenome.AppConfig.RegisterTypeAlias(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="alias"></param>
            <param name="typeDefine"></param>
        </member>
        <member name="M:M2SA.AppGenome.AppConfig.RegisterModule(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="moduleKey"></param>
            <param name="module"></param>
        </member>
        <member name="T:M2SA.AppGenome.AppHub.ExitCommandListener">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.AppHub.ExitCommandListener.AsyncStart">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.AppHub.ExitCommandListener.IsRunning">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.AppHub.ExitCommandListener.ApplicationHost">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.AppHub.ExitCommandListener.CommandArguments">
            <summary>
            
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.AppHub.CommandArguments">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.AppHub.CommandArguments.SessionId">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.AppHub.CommandArguments.HostProcessId">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.AppHub.CommandArguments.#ctor(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:M2SA.AppGenome.AppHub.CommandArguments.GetCommandArgument(System.String)">
            <summary>
            
            </summary>
            <param name="argName"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.AppHub.CommandArguments.ContainsArgument(System.String)">
            <summary>
            
            </summary>
            <param name="argName"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.AppHub.CommandArguments.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.AppHub.CommandType">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.AppHub.CommandType.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.AppHub.CommandType.Start">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.AppHub.CommandType.Restart">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.AppHub.CommandType.Exit">
            <summary>
            
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.AppHub.ConsoleExitHanlder">
            <summary>
            
            </summary>
        </member>
        <member name="E:M2SA.AppGenome.AppHub.ConsoleExitHanlder.Exit">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.AppHub.ConsoleExitHanlder.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.AppHub.LogHelper">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.AppHub.LogHelper.LoggerName">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.AppHub.LogHelper.Info(System.Object,System.String,System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="appId"></param>
            <param name="container"></param>
            <param name="info"></param>
            <param name="args"></param>
        </member>
        <member name="M:M2SA.AppGenome.AppHub.LogHelper.AppInfo(System.Object,System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="appId"></param>
            <param name="info"></param>
            <param name="args"></param>
        </member>
        <member name="M:M2SA.AppGenome.AppHub.LogHelper.HostInfo(System.Object,System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="appId"></param>
            <param name="info"></param>
            <param name="args"></param>
        </member>
        <member name="T:M2SA.AppGenome.AppHub.ApplicationHub">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.AppHub.ApplicationHub.AsyncStart">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.AppHub.ApplicationHub.Extensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.AppHub.ApplicationHub.OnInit(M2SA.AppGenome.ApplicationHost,M2SA.AppGenome.AppHub.CommandArguments)">
            <summary>
            
            </summary>
            <param name="onwer"></param>
            <param name="args"></param>
        </member>
        <member name="M:M2SA.AppGenome.AppHub.ApplicationHub.OnStart(M2SA.AppGenome.ApplicationHost,M2SA.AppGenome.AppHub.CommandArguments)">
            <summary>
            
            </summary>
            <param name="onwer"></param>
            <param name="args"></param>
        </member>
        <member name="M:M2SA.AppGenome.AppHub.ApplicationHub.OnStop(M2SA.AppGenome.ApplicationHost,M2SA.AppGenome.AppHub.CommandArguments)">
            <summary>
            
            </summary>
            <param name="onwer"></param>
            <param name="args"></param>
        </member>
        <member name="M:M2SA.AppGenome.AppHub.ApplicationHub.Register``1(``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="item"></param>
        </member>
        <member name="M:M2SA.AppGenome.AppHub.ApplicationHub.UnRegister``1(``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="item"></param>
        </member>
        <member name="T:M2SA.AppGenome.AppInstance">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.AppInstance.Config">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.AppInstance.GetThreadPool">
            <summary>
            获取默认线程池
            </summary>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.AppInstance.GetTaskProcessor">
            <summary>
            获取默认任务处理器
            </summary>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.AppInstance.GetConfigNode(System.String)">
            <summary>
            获取配置信息
            </summary>
            <param name="configSectionName"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.AppInstance.GetConfigNode(System.String,System.String)">
            <summary>
            获取配置信息
            </summary>
            <param name="configSectionName"></param>
            <param name="nodePath"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.AppInstance.RegisterTypeAlias(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="alias"></param>
            <param name="typeDefine"></param>
        </member>
        <member name="M:M2SA.AppGenome.AppInstance.RegisterTypeAlias``1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:M2SA.AppGenome.AppInstance.RegisterTypeAlias``2(System.String)">
            <summary>
            
            </summary>
            <typeparam name="T">接口(或基类型)</typeparam>
            <typeparam name="TImpl">目标类型</typeparam>
            <param name="alias"></param>
        </member>
        <member name="M:M2SA.AppGenome.AppInstance.RegisterTypeAliasByModule``1(System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="moduleKey"></param>
        </member>
        <member name="M:M2SA.AppGenome.AppInstance.RegisterModule(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="moduleKey"></param>
            <param name="module"></param>
        </member>
        <member name="P:M2SA.AppGenome.AppInstance.AsyncStart">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.AppInstance.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.ArgumentAssertion">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.ArgumentAssertion.IsNotNull(System.Object,System.String)">
            <summary>
            
            </summary>
            <param name="argumentValue"></param>
            <param name="argumentName"></param>
        </member>
        <member name="T:M2SA.AppGenome.Cache.CacheExtend">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Cache.CacheExtend.LoadEntityAndCache``1(M2SA.AppGenome.Cache.ICache,System.String,System.Func{``0})">
            <summary>
            从缓存获取数据，如缓存中没有指定数据，则通过loadEntity(key)获取数据，并将数据缓存
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cache"></param>
            <param name="key"></param>
            <param name="loadEntity"></param>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.Cache.CacheManager">
            <summary>
            获取ICache的默认实例
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Cache.CacheManager.GetCache">
            <summary>
            获取ICache的默认实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Cache.CacheManager.GetCache(System.String)">
            <summary>
            获取ICache的指定类别的实例
            </summary>
            <param name="categoryName"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Cache.CacheManager.ExistsCache(System.String)">
            <summary>
            是否存在指定类别的ICache
            </summary>
            <param name="categoryName"></param>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.Cache.EmptyCacheNotify">
            <summary>
            ICacheNotify的空实现
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Cache.EmptyCacheNotify.NeedItemHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Cache.EmptyCacheNotify.SetCache(M2SA.AppGenome.Cache.ICache)">
            <summary>
            
            </summary>
            <param name="cache"></param>
        </member>
        <member name="M:M2SA.AppGenome.Cache.EmptyCacheNotify.OnBeforeGet(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:M2SA.AppGenome.Cache.EmptyCacheNotify.OnAfterGet(System.String,System.Object@)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:M2SA.AppGenome.Cache.EmptyCacheNotify.OnBeforeSet(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:M2SA.AppGenome.Cache.EmptyCacheNotify.OnAfterSet(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:M2SA.AppGenome.Cache.EmptyCacheNotify.OnBeforeRemove(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:M2SA.AppGenome.Cache.EmptyCacheNotify.OnAfterRemove(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
        </member>
        <member name="T:M2SA.AppGenome.Cache.ICacheFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Cache.ICacheFactory.GetCache">
            <summary>
            获取ICache的默认实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Cache.ICacheFactory.GetCache(System.String)">
            <summary>
            获取ICache的指定类别的实例
            </summary>
            <param name="categoryName"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Cache.ICacheFactory.ExistsCache(System.String)">
            <summary>
            是否存在指定类别的ICache
            </summary>
            <param name="categoryName"></param>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.Cache.ICacheNotify">
            <summary>
            缓存监听接口
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Cache.ICacheNotify.NeedItemHandler">
            <summary>
            根据配置节点初始化
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Cache.ICacheNotify.SetCache(M2SA.AppGenome.Cache.ICache)">
            <summary>
            关联cache实例
            </summary>
            <param name="cache"></param>
        </member>
        <member name="M:M2SA.AppGenome.Cache.ICacheNotify.OnBeforeGet(System.String)">
            <summary>
            Get数据前的执行方法
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:M2SA.AppGenome.Cache.ICacheNotify.OnAfterGet(System.String,System.Object@)">
            <summary>
            Get数据后的执行方法
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:M2SA.AppGenome.Cache.ICacheNotify.OnBeforeSet(System.String,System.Object)">
            <summary>
            Set数据前的执行方法
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:M2SA.AppGenome.Cache.ICacheNotify.OnAfterSet(System.String,System.Object)">
            <summary>
            Set数据后的执行方法
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:M2SA.AppGenome.Cache.ICacheNotify.OnBeforeRemove(System.String)">
            <summary>
            Remove数据前的执行方法
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:M2SA.AppGenome.Cache.ICacheNotify.OnAfterRemove(System.String)">
            <summary>
            Remove数据前的执行方法
            </summary>
            <param name="key"></param>
        </member>
        <member name="T:M2SA.AppGenome.Cache.ILoadDataHandler">
            <summary>
            缓存项操作接口
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Cache.ILoadDataHandler.LoadData(System.String)">
            <summary>
            根据Key从数据源获取数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.Cache.ICache">
            <summary>
            缓存接口
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Cache.ICache.LoadDataHandler">
            <summary>
            缓存项操作接口
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Cache.ICache.Name">
            <summary>
            缓存名称
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Cache.ICache.ExpiryTime">
            <summary>
            缓存有效期
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Cache.ICache.Get(System.String)">
            <summary>
            获取数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Cache.ICache.Get``1(System.Object)">
            <summary>
            获取数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Cache.ICache.Set(System.String,System.Object)">
            <summary>
            保存数据
            </summary>
            <param name="key"></param>
            <param name="data"></param>
        </member>
        <member name="M:M2SA.AppGenome.Cache.ICache.Set(System.Object,System.Object)">
            <summary>
            保存数据
            </summary>
            <param name="key"></param>
            <param name="data"></param>
        </member>
        <member name="M:M2SA.AppGenome.Cache.ICache.Remove(System.String)">
            <summary>
            移除数据
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:M2SA.AppGenome.Cache.ICache.GetState">
            <summary>
            获取缓存状态信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.Configuration.ResolveObjectBase">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Configuration.ResolveObjectBase.Initialize(M2SA.AppGenome.Configuration.IConfigNode)">
            <summary>
            
            </summary>
            <param name="config"></param>
        </member>
        <member name="T:M2SA.AppGenome.Configuration.ConfigNode">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Configuration.ConfigNode.#ctor(System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="configNode"></param>        
        </member>
        <member name="M:M2SA.AppGenome.Configuration.ConfigNode.ResolveObject(System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="node"></param>        
        </member>
        <member name="P:M2SA.AppGenome.Configuration.ConfigNode.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Configuration.ConfigNode.MetaType">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Configuration.ConfigNode.EnableSingleton">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Configuration.ConfigNode.PropertiesCount">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Configuration.ConfigNode.GetProperties">
            <summary>
            获取所有属性值
            </summary>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Configuration.ConfigNode.ContainsProperty(System.String)">
            <summary>
            是否存在属性值
            </summary>
            <param name="propertyName"></param>
            <returns></returns>        
        </member>
        <member name="M:M2SA.AppGenome.Configuration.ConfigNode.GetProperty(System.String)">
            <summary>
            获取属性值
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Configuration.ConfigNode.GetProperty(System.String,System.Object)">
            <summary>
            获取属性值
            </summary>
            <param name="propertyName"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Configuration.ConfigNode.GetProperty``1(System.String)">
            <summary>
            获取属性值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Configuration.ConfigNode.GetProperty``1(System.String,``0)">
            <summary>
            获取属性值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="propertyName"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Configuration.ConfigNode.SetProperty``1(System.String,``0)">
            <summary>
            设置属性值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="propertyName"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Configuration.ConfigNode.GetNodeList(System.String)">
            <summary>
            获取子节点列表
            </summary>
            <param name="nodeName"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Configuration.ConfigNode.GetNodeMap(System.String)">
            <summary>
            获取子节点字典
            </summary>
            <param name="nodeName"></param>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.Configuration.ConfigException">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Configuration.ConfigException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Configuration.ConfigException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:M2SA.AppGenome.Configuration.ConfigException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:M2SA.AppGenome.Configuration.ConfigException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:M2SA.AppGenome.Configuration.IConfigNode">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Configuration.IConfigNode.Name">
            <summary>
            节点名称
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Configuration.IConfigNode.MetaType">
            <summary>
            节点类型
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Configuration.IConfigNode.EnableSingleton">
            <summary>
            启用单例
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Configuration.IConfigNode.GetProperties">
            <summary>
            获取所有属性值
            </summary>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Configuration.IConfigNode.ContainsProperty(System.String)">
            <summary>
            是否存在属性值
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Configuration.IConfigNode.GetProperty(System.String)">
            <summary>
            获取属性值
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Configuration.IConfigNode.GetProperty(System.String,System.Object)">
            <summary>
            获取属性值
            </summary>
            <param name="propertyName"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Configuration.IConfigNode.GetProperty``1(System.String)">
            <summary>
            获取属性值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Configuration.IConfigNode.GetProperty``1(System.String,``0)">
            <summary>
            获取属性值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="propertyName"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Configuration.IConfigNode.SetProperty``1(System.String,``0)">
            <summary>
            设置属性值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="propertyName"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Configuration.IConfigNode.GetNodeList(System.String)">
            <summary>
            获取子节点列表
            </summary>
            <param name="nodeName"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Configuration.IConfigNode.GetNodeMap(System.String)">
            <summary>
            获取子节点字典
            </summary>
            <param name="nodeName"></param>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.Configuration.IResolveObject">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Configuration.IResolveObject.Initialize(M2SA.AppGenome.Configuration.IConfigNode)">
            <summary>
            根据配置进行初始化
            </summary>
            <param name="config"></param>
        </member>
        <member name="T:M2SA.AppGenome.Configuration.ResolveFactoryBase`1">
            <summary>
            IResolveObject对象工厂
            </summary>
            <typeparam name="TType"></typeparam>
        </member>
        <member name="F:M2SA.AppGenome.Configuration.ResolveFactoryBase`1.SyscObject">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Configuration.ResolveFactoryBase`1.ObjectMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Configuration.ResolveFactoryBase`1.ModuleKey">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Configuration.ResolveFactoryBase`1.GetInstance">
            <summary>
            获取默认名称的实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Configuration.ResolveFactoryBase`1.GetInstance(System.String)">
            <summary>
            获取强名称的实例
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Configuration.ResolveFactoryBase`1.Exists(System.String)">
            <summary>
            是否存在指定实例
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Configuration.ResolveFactoryBase`1.LoadConfigInfo(System.String)">
            <summary>
            加载指定的配置信息
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Configuration.ResolveFactoryBase`1.ResolveObject(System.String)">
            <summary>
            创建对象实例
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Configuration.ResolveFactoryBase`1.GetDefaultCategory">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.Configuration.ObjectBuilder">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Configuration.ObjectBuilder.BuildObject(System.String)">
            <summary>
            创建对象实例
            </summary>
            <param name="typeAlias"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Configuration.ObjectBuilder.BuildObject(System.Type)">
            <summary>
            创建对象实例
            </summary>
            <param name="targetType"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Configuration.ObjectBuilder.BuildObject(System.Type,System.String)">
            <summary>
            创建对象实例
            </summary>
            <param name="targetType"></param>
            <param name="typeAlias"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Configuration.ObjectBuilder.DeserializeObject(M2SA.AppGenome.Configuration.IResolveObject,M2SA.AppGenome.Configuration.IConfigNode)">
            <summary>
            设置对象属性
            </summary>
            <param name="source"></param>
            <param name="configNode"></param>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.Configuration.ThreadPoolConfig">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Configuration.ThreadPoolConfig.MinThreads">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Configuration.ThreadPoolConfig.MaxThreads">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Configuration.ThreadPoolConfig.IdleTimeout">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Configuration.ThreadPoolConfig.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.Configuration.XmlConfigSection">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Configuration.XmlConfigSection.RawXml">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Configuration.XmlConfigSection.DeserializeSection(System.Xml.XmlReader)">
            <summary>
            
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:M2SA.AppGenome.Configuration.XmlConfigSection.Reset(System.Configuration.ConfigurationElement)">
            <summary>
            
            </summary>
            <param name="parentElement"></param>
        </member>
        <member name="M:M2SA.AppGenome.Configuration.XmlConfigSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)">
            <summary>
            
            </summary>
            <param name="parentElement"></param>
            <param name="name"></param>
            <param name="saveMode"></param>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.Data.DatabaseType">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Data.DatabaseType.MySql">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Data.DatabaseType.SqlServer">
            <summary>
            
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.Data.EntityBase`1">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Data.EntityBase`1.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Data.EntityBase`1.PersistentState">
            <summary>
            
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.Data.IEntity">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Data.IEntity.PersistentState">
            <summary>
            
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.Data.IEntity`1">
            <summary>
            Description of IEntity.
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Data.IEntity`1.Id">
            <summary>
            
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.Data.IRepository`2">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TId"></typeparam>
        </member>
        <member name="M:M2SA.AppGenome.Data.IRepository`2.CreateNew">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Data.IRepository`2.FindById(`1)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Data.IRepository`2.Save(`0)">
            <summary>
            
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Data.IRepository`2.Remove(`0)">
            <summary>
            
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Data.IRepository`2.LoadAll">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.Data.IRepositoryFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Data.IRepositoryFactory.GetRepository``1">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.Data.Pagination">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Data.Pagination.PageSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Data.Pagination.PageIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Data.Pagination.LimitQueryCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Data.Pagination.TotalCount">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Data.Pagination.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.Data.RepositoryManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Data.RepositoryManager.GetRepository``1">
            <summary>
            获取IRepository的默认实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Data.RepositoryManager.GetRepository``1(System.String)">
            <summary>
            获取IRepository的实例
            </summary>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.Datestamp">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Datestamp.ZeroTime">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Datestamp.ToDatestamp(System.DateTime)">
            <summary>
            
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Datestamp.ToDateTime(System.Int32)">
            <summary>
            
            </summary>
            <param name="datestamp"></param>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.Logging.EffectiveFileLogger">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Logging.EffectiveFileLogger.WriteException(System.Exception)">
            <summary>
            
            </summary>
            <param name="ex"></param>
        </member>
        <member name="T:M2SA.AppGenome.Logging.ILogFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Logging.ILogFactory.GetLogger">
            <summary>
            获取ILog的默认实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Logging.ILogFactory.GetLogger(System.String)">
            <summary>
            获取ILog的指定类别的实例
            </summary>
            <param name="categoryName"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Logging.ILogFactory.GetSessionLogger(System.String)">
            <summary>
            获取ILog的指定会话标识的默认实例
            </summary>
            <param name="sessionId"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Logging.ILogFactory.GetSessionLogger(System.String,System.String)">
            <summary>
            获取ILog的指定类别和会话标识的实例
            </summary>
            <param name="categoryName"></param>
            <param name="sessionId"></param>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.Logging.ILogEntry">
            <summary>
            日志消息体接口
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Logging.ILogEntry.AppName">
            <summary>
            应用程序标识
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Logging.ILogEntry.LogName">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Logging.ILogEntry.SessionId">
            <summary>
            会话标识
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Logging.ILogEntry.ServerIP">
            <summary>
            会话标识
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Logging.ILogEntry.BizType">
            <summary>
            业务类型
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Logging.ILogEntry.BizId">
            <summary>
            业务标识
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Logging.ILogEntry.BizOperator">
            <summary>
            操作员
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Logging.ILogEntry.BizLabs">
            <summary>
            日志标签，可以有多个
            <see cref="F:M2SA.AppGenome.Logging.ConstLogKeys.LabSeparator"/>
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Logging.ILogEntry.LogLevel">
            <summary>
            日志级别
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Logging.ILogEntry.Message">
            <summary>
            日志消息
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Logging.ILogEntry.URI">
            <summary>
            日志源URI
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Logging.ILogEntry.LogTime">
            <summary>
            日志时间
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Logging.ILogEntry.WriteTime">
            <summary>
            写日志时间
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Logging.ILogEntry.ExtendInfo">
            <summary>
            扩展属性
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Logging.ILogEntry.SysInfo">
            <summary>
            系统信息
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Logging.ILogEntry.Exception">
            <summary>
            异常信息
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.Logging.ILog">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Logging.ILog.Name">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Logging.ILog.WriteMessage(M2SA.AppGenome.Logging.LogLevel,System.Object,System.Exception)">
            <summary>
            
            </summary>
            <param name="level"></param>
            <param name="msg"></param>
            <param name="exception"></param>
        </member>
        <member name="M:M2SA.AppGenome.Logging.ILog.Debug(System.Object)">
            <summary>
            
            </summary>
            <param name="message">消息类型：简单值对象, IDictionary[string, object], ILogEntry实现</param>
        </member>
        <member name="M:M2SA.AppGenome.Logging.ILog.Debug(System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:M2SA.AppGenome.Logging.ILog.Trace(System.Object)">
            <summary>
            
            </summary>
            <param name="message">消息类型：简单值对象, IDictionary[string, object], ILogEntry实现</param>
        </member>
        <member name="M:M2SA.AppGenome.Logging.ILog.Trace(System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:M2SA.AppGenome.Logging.ILog.Info(System.Object)">
            <summary>
            
            </summary>
            <param name="message">消息类型：简单值对象, IDictionary[string, object], ILogEntry实现</param>
        </member>
        <member name="M:M2SA.AppGenome.Logging.ILog.Info(System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:M2SA.AppGenome.Logging.ILog.Warn(System.Object)">
            <summary>
            
            </summary>
            <param name="message">消息类型：简单值对象, IDictionary[string, object], ILogEntry实现</param>
        </member>
        <member name="M:M2SA.AppGenome.Logging.ILog.Warn(System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:M2SA.AppGenome.Logging.ILog.Warn(System.Exception,System.Object)">
            <summary>
            
            </summary>
            <param name="exception"></param>
            <param name="message">消息类型：简单值对象, IDictionary[string, object], ILogEntry实现</param>
        </member>
        <member name="M:M2SA.AppGenome.Logging.ILog.Error(System.Object)">
            <summary>
            
            </summary>
            <param name="message">消息类型：简单值对象, IDictionary[string, object], ILogEntry实现</param>
        </member>
        <member name="M:M2SA.AppGenome.Logging.ILog.Error(System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:M2SA.AppGenome.Logging.ILog.Error(System.Exception,System.Object)">
            <summary>
            
            </summary>
            <param name="exception"></param>
            <param name="message">消息类型：简单值对象, IDictionary[string, object], ILogEntry实现</param>
        </member>
        <member name="M:M2SA.AppGenome.Logging.ILog.Fatal(System.Object)">
            <summary>
            
            </summary>
            <param name="message">消息类型：简单值对象, IDictionary[string, object], ILogEntry实现</param>
        </member>
        <member name="M:M2SA.AppGenome.Logging.ILog.Fatal(System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:M2SA.AppGenome.Logging.ILog.Fatal(System.Exception,System.Object)">
            <summary>
            
            </summary>
            <param name="exception"></param>
            <param name="message">消息类型：简单值对象, IDictionary[string, object], ILogEntry实现</param>
        </member>
        <member name="T:M2SA.AppGenome.Logging.ConstLogKeys">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.ConstLogKeys.LabSeparator">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.ConstLogKeys.HttpRequestKey">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.ConstLogKeys.StartKey">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.ConstLogKeys.EndKey">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.ConstLogKeys.StepKey">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.ConstLogKeys.SpanKey">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.ConstLogKeys.NewLineKey">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.ConstLogKeys.AppNameKey">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.ConstLogKeys.ServerIPKey">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.ConstLogKeys.SessionIdKey">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.ConstLogKeys.BizTypeKey">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.ConstLogKeys.BIZLABSKEY">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.ConstLogKeys.LOGLEVELKEY">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.ConstLogKeys.MESSAGEKEY">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.ConstLogKeys.URIKEY">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.ConstLogKeys.LOGTIMEKEY">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.ConstLogKeys.WRITETIMEKEY">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.ConstLogKeys.EXCEPTIONKEY">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.ConstLogKeys.SYSINFOKEY">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.ConstLogKeys.SYSINFOSERVERIPKEY">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.ConstLogKeys.SYSINFOTOTALCPUKEY">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.ConstLogKeys.SYSINFOTOTALMEMORYKEY">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.ConstLogKeys.SYSINFOPROCESSNAMEKEY">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.ConstLogKeys.SYSINFOPROCESSCPUKEY">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.ConstLogKeys.SYSINFOPROCESSMEMORYKEY">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.ConstLogKeys.SYSINFOTOTALTHREADCOUNTKEY">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.ConstLogKeys.SYSINFOTHREADNAMEKEY">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.ConstLogKeys.SYSINFOTHREADIDKEY">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.ConstLogKeys.SYSINFOTHREADPOOLKEY">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.ConstLogKeys.EXCEPTIONNAMESPACEKEY">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.ConstLogKeys.EXCEPTIONNAMEKEY">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.ConstLogKeys.EXCEPTIONMESSAGEKEY">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.ConstLogKeys.EXCEPTIONSTACKTRACEKEY">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.ConstLogKeys.EXCEPTIONTARGETSITEKEY">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.ConstLogKeys.EXCEPTIONINNEREXCEPTIONKEY">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.ConstLogKeys.SESSIONCOLLECTIONKEY">
            <summary>
            
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.Logging.LogEntry">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Logging.LogEntry.AppName">
            <summary>
            应用程序标识
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Logging.LogEntry.LogName">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Logging.LogEntry.SessionId">
            <summary>
            会话标识
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Logging.LogEntry.ServerIP">
            <summary>
            会话标识
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Logging.LogEntry.BizType">
            <summary>
            业务类型
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Logging.LogEntry.BizId">
            <summary>
            业务标识
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Logging.LogEntry.BizOperator">
            <summary>
            业务标识
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Logging.LogEntry.BizLabs">
            <summary>
            日志标签，可以有多个
            <see cref="F:M2SA.AppGenome.Logging.ConstLogKeys.LabSeparator"/>
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Logging.LogEntry.LogLevel">
            <summary>
            日志级别
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Logging.LogEntry.Message">
            <summary>
            日志消息
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Logging.LogEntry.URI">
            <summary>
            日志源URI
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Logging.LogEntry.LogTime">
            <summary>
            日志时间
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Logging.LogEntry.WriteTime">
            <summary>
            写日志时间
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Logging.LogEntry.Exception">
            <summary>
            异常信息
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Logging.LogEntry.ExtendInfo">
            <summary>
            扩展属性
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Logging.LogEntry.SysInfo">
            <summary>
            系统信息
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Logging.LogEntry.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Logging.LogEntry.GetExtendValue``1(System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Logging.LogEntry.SetExtendValue``1(System.String,``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="val"></param>
        </member>
        <member name="T:M2SA.AppGenome.Logging.LogLevel">
            <summary>
            日志级别
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.LogLevel.All">
            <summary>
            允许所有日志
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.LogLevel.Debug">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.LogLevel.Trace">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.LogLevel.Info">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.LogLevel.Warn">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.LogLevel.Error">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.LogLevel.Fatal">
            <summary>
            致命错误
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.LogLevel.Off">
            <summary>
            禁止所有日志
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.Logging.SystemLogger">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Logging.SystemLogger.ConsoleColors">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Logging.SystemLogger.WriteLine(M2SA.AppGenome.Logging.LogLevel,System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="level"></param>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:M2SA.AppGenome.Logging.SystemLogger.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Logging.SystemLogger.Name">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Logging.SystemLogger.WriteMessage(M2SA.AppGenome.Logging.LogLevel,System.Object,System.Exception)">
            <summary>
            
            </summary>
            <param name="level"></param>
            <param name="msg"></param>
            <param name="exception"></param>
        </member>
        <member name="M:M2SA.AppGenome.Logging.SystemLogger.Debug(System.Object)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:M2SA.AppGenome.Logging.SystemLogger.Debug(System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:M2SA.AppGenome.Logging.SystemLogger.Trace(System.Object)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:M2SA.AppGenome.Logging.SystemLogger.Trace(System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:M2SA.AppGenome.Logging.SystemLogger.Info(System.Object)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:M2SA.AppGenome.Logging.SystemLogger.Info(System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:M2SA.AppGenome.Logging.SystemLogger.Warn(System.Object)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:M2SA.AppGenome.Logging.SystemLogger.Warn(System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:M2SA.AppGenome.Logging.SystemLogger.Warn(System.Exception,System.Object)">
            <summary>
            
            </summary>
            <param name="exception"></param>
            <param name="message"></param>
        </member>
        <member name="M:M2SA.AppGenome.Logging.SystemLogger.Error(System.Object)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:M2SA.AppGenome.Logging.SystemLogger.Error(System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:M2SA.AppGenome.Logging.SystemLogger.Error(System.Exception,System.Object)">
            <summary>
            
            </summary>
            <param name="exception"></param>
            <param name="message"></param>
        </member>
        <member name="M:M2SA.AppGenome.Logging.SystemLogger.Fatal(System.Object)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:M2SA.AppGenome.Logging.SystemLogger.Fatal(System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:M2SA.AppGenome.Logging.SystemLogger.Fatal(System.Exception,System.Object)">
            <summary>
            
            </summary>
            <param name="exception"></param>
            <param name="message"></param>
        </member>
        <member name="M:M2SA.AppGenome.Logging.SystemLogger.Initialize(M2SA.AppGenome.Configuration.IConfigNode)">
            <summary>
            
            </summary>
            <param name="config"></param>
        </member>
        <member name="T:M2SA.AppGenome.Logging.LogManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Logging.LogManager.GetLogger">
            <summary>
            获取ILog的默认实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Logging.LogManager.GetLogger(System.String)">
            <summary>
            获取ILog的指定类别的实例
            </summary>
            <param name="categoryName"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Logging.LogManager.GetSessionLogger(System.String)">
            <summary>
            获取ILog的指定会话标识的默认实例
            </summary>
            <param name="sessionId"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Logging.LogManager.GetSessionLogger(System.String,System.String)">
            <summary>
            获取ILog的指定类别和会话标识的实例
            </summary>
            <param name="categoryName"></param>
            <param name="sessionId"></param>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.Diagnostics.PerfmonCounter">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Diagnostics.PerfmonCounter.InstanceName">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Diagnostics.PerfmonCounter.CategoryName">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Diagnostics.PerfmonCounter.CounterData">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Diagnostics.PerfmonCounter.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="instanceName"></param>
            <param name="categoryName"></param>
        </member>
        <member name="T:M2SA.AppGenome.Diagnostics.PerfmonCounterCategory">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Diagnostics.PerfmonCounterCategory.MachineName">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Diagnostics.PerfmonCounterCategory.CategoryName">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Diagnostics.PerfmonCounterCategory.Instances">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Diagnostics.PerfmonCounterCategory.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="categoryName"></param>
            <param name="machineName"></param>
        </member>
        <member name="T:M2SA.AppGenome.Diagnostics.PerfmonCounterItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Diagnostics.PerfmonCounterItem.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Diagnostics.PerfmonCounterItem.ReadOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Diagnostics.PerfmonCounterItem.RawValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Diagnostics.PerfmonCounterItem.#ctor(System.Boolean)">
            <summary>
            
            </summary>
            <param name="readOnly"></param>
        </member>
        <member name="T:M2SA.AppGenome.Diagnostics.PerfmonCounterManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Diagnostics.PerfmonCounterManager.GetCounterCategory(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="categoryName"></param>
            <param name="machineName"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Diagnostics.PerfmonCounterManager.GetCounterInstance(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="instanceName"></param>
            <param name="categoryName"></param>
            <param name="machineName"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Diagnostics.PerfmonCounterManager.GetCounterItemValue(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="itemName"></param>
            <param name="instanceName"></param>
            <param name="categoryName"></param>
            <param name="machineName"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Diagnostics.PerfmonCounterManager.GetCounterItemNextValue(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="itemName"></param>
            <param name="instanceName"></param>
            <param name="categoryName"></param>
            <param name="machineName"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Diagnostics.PerfmonCounterManager.GetSampleItemValue(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="itemName"></param>
            <param name="instanceName"></param>
            <param name="categoryName"></param>
            <param name="machineName"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Diagnostics.PerfmonCounterManager.RegisterSampleCounterListener(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="itemName"></param>
            <param name="instanceName"></param>
            <param name="categoryName"></param>
            <param name="machineName"></param>
        </member>
        <member name="T:M2SA.AppGenome.Diagnostics.PerfmonCounterManager.SampleCounterProxy">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Diagnostics.PerfmonCounterManager.SampleCounterProxy.MachineName">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Diagnostics.PerfmonCounterManager.SampleCounterProxy.CategoryName">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Diagnostics.PerfmonCounterManager.SampleCounterProxy.InstanceName">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Diagnostics.PerfmonCounterManager.SampleCounterProxy.ItemName">
            <summary>
            
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.Diagnostics.SystemInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Diagnostics.SystemInfo.GetServerIP">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Diagnostics.SystemInfo.GetInfo">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Diagnostics.SystemInfo.GetInfo(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="sourceIP"></param>
            <param name="processName"></param>
            <returns></returns>
        </member>
        <member name="P:M2SA.AppGenome.Diagnostics.SystemInfo.ServerIP">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Diagnostics.SystemInfo.TotalCPU">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Diagnostics.SystemInfo.TotalMemory">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Diagnostics.SystemInfo.ProcessName">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Diagnostics.SystemInfo.ProcessCPU">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Diagnostics.SystemInfo.ProcessMemory">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Diagnostics.SystemInfo.ProcessThreadCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Diagnostics.SystemInfo.ThreadName">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Diagnostics.SystemInfo.ThreadId">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Diagnostics.SystemInfo.ThreadPool">
            <summary>
            
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.ExceptionHandling.IExceptionPolicyFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.ExceptionHandling.IExceptionPolicyFactory.GetPolicy(System.String)">
            <summary>
            
            </summary>
            <param name="policyName"></param>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.ExceptionHandling.SystemHandleException">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.ExceptionHandling.SystemHandleException.HandleException(System.Exception,System.Collections.IDictionary)">
            <summary>
            
            </summary>
            <param name="originalException"></param>
            <param name="bizInfo"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.ExceptionHandling.SystemHandleException.Initialize(M2SA.AppGenome.Configuration.IConfigNode)">
            <summary>
            
            </summary>
            <param name="config"></param>
        </member>
        <member name="T:M2SA.AppGenome.ExceptionHandling.ExceptionHandlingException">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.ExceptionHandling.ExceptionHandlingException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.ExceptionHandling.ExceptionHandlingException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:M2SA.AppGenome.ExceptionHandling.ExceptionHandlingException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:M2SA.AppGenome.ExceptionHandling.ExceptionHandlingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:M2SA.AppGenome.ExceptionHandling.ExceptionPolicy">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.ExceptionHandling.ExceptionPolicy.PolicyEntries">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.ExceptionHandling.ExceptionPolicy.Initialize(M2SA.AppGenome.Configuration.IConfigNode)">
            <summary>
            
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:M2SA.AppGenome.ExceptionHandling.ExceptionPolicy.HandleException(System.Exception,System.Collections.IDictionary)">
            <summary>
            
            </summary>
            <param name="originalException"></param>
            <param name="bizInfo"></param>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.ExceptionHandling.ExceptionPolicyEntry">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.ExceptionHandling.ExceptionPolicyEntry.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.ExceptionHandling.ExceptionPolicyEntry.ExceptionType">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.ExceptionHandling.ExceptionPolicyEntry.PostHandlingAction">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.ExceptionHandling.ExceptionPolicyEntry.Handlers">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.ExceptionHandling.ExceptionPolicyEntry.Handle(System.Exception,System.Collections.IDictionary)">
            <summary>
            
            </summary>
            <param name="originalException"></param>
            <param name="bizInfo"></param>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.ExceptionHandling.ExceptionPolicyFactory">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.ExceptionHandling.ExceptionPolicyFactory.ModuleKey">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.ExceptionHandling.ExceptionPolicyFactory.LoadConfigInfo(System.String)">
            <summary>
            加载指定的配置信息
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.ExceptionHandling.ExceptionPolicyFactory.ResolveObject(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.ExceptionHandling.ExceptionPolicyFactory.GetPolicy(System.String)">
            <summary>
            
            </summary>
            <param name="policyName"></param>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.ExceptionHandling.HttpRedirectHandler">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.ExceptionHandling.HttpRedirectHandler.Url">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.ExceptionHandling.HttpRedirectHandler.HandleException(System.Exception,System.Guid,System.Collections.IDictionary)">
            <summary>
            
            </summary>
            <param name="exception"></param>
            <param name="handlingInstanceId"></param>
            <param name="bizInfo"></param>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.ExceptionHandling.IExceptionHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.ExceptionHandling.IExceptionHandler.HandleException(System.Exception,System.Guid,System.Collections.IDictionary)">
            <summary>
            
            </summary>
            <param name="exception"></param>
            <param name="handlingInstanceId"></param>
            <param name="bizInfo"></param>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.ExceptionHandling.IExceptionPolicy">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.ExceptionHandling.IExceptionPolicy.HandleException(System.Exception,System.Collections.IDictionary)">
            <summary>
            
            </summary>
            <param name="originalException"></param>
            <param name="bizInfo"></param>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.ExceptionHandling.LoggingExceptionHandler">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.ExceptionHandling.LoggingExceptionHandler.LogLevel">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.ExceptionHandling.LoggingExceptionHandler.LogCategory">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.ExceptionHandling.LoggingExceptionHandler.HandleException(System.Exception,System.Guid,System.Collections.IDictionary)">
            <summary>
            
            </summary>
            <param name="exception"></param>
            <param name="handlingInstanceId"></param>
            <param name="bizInfo"></param>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.ExceptionHandling.PostHandlingAction">
            <summary>
            Determines what action should occur after an exception is handled by the configured exception handling chain. 
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.ExceptionHandling.PostHandlingAction.None">
            <summary>
            Indicates that no rethrow should occur.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.ExceptionHandling.PostHandlingAction.NotifyRethrow">
            <summary>
            Notify the caller that a rethrow is recommended.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.ExceptionHandling.PostHandlingAction.ThrowNewException">
            <summary>
            Throws the exception after the exception has been handled by all handlers in the chain.
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.ExceptionHandling.ReplaceHandler">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.ExceptionHandling.ReplaceHandler.ReplaceMessage">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.ExceptionHandling.ReplaceHandler.ReplaceType">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.ExceptionHandling.ReplaceHandler.HandleException(System.Exception,System.Guid,System.Collections.IDictionary)">
            <summary>
            
            </summary>
            <param name="exception"></param>
            <param name="handlingInstanceId"></param>
            <param name="bizInfo"></param>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.ExceptionHandling.WrapHandler">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.ExceptionHandling.WrapHandler.WrapMessage">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.ExceptionHandling.WrapHandler.WrapType">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.ExceptionHandling.WrapHandler.HandleException(System.Exception,System.Guid,System.Collections.IDictionary)">
            <summary>
            
            </summary>
            <param name="exception"></param>
            <param name="handlingInstanceId"></param>
            <param name="bizInfo"></param>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.IExtensionApplication">
            <summary>
            Application扩展接口
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.IExtensionApplication.AsyncStart">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.IExtensionApplication.OnInit(M2SA.AppGenome.ApplicationHost,M2SA.AppGenome.AppHub.CommandArguments)">
            <summary>
            当应用程序初始化时触发
            </summary>
            <param name="onwer"></param>
            <param name="args"></param>
        </member>
        <member name="M:M2SA.AppGenome.IExtensionApplication.OnStart(M2SA.AppGenome.ApplicationHost,M2SA.AppGenome.AppHub.CommandArguments)">
            <summary>
            当应用程序启用时触发
            </summary>
            <param name="onwer"></param>
            <param name="args"></param>
        </member>
        <member name="M:M2SA.AppGenome.IExtensionApplication.OnStop(M2SA.AppGenome.ApplicationHost,M2SA.AppGenome.AppHub.CommandArguments)">
            <summary>
            当应用程序退出时触发
            </summary>
            <param name="onwer"></param>
            <param name="args"></param>
        </member>
        <member name="T:M2SA.AppGenome.ObjectIOCFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.ObjectIOCFactory.ResolveInstance``1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.ObjectIOCFactory.ResolveInstance``1(System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="alias"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.ObjectIOCFactory.GetSingleton``1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.ObjectIOCFactory.GetSingleton``1(System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="alias"></param>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.PersistentState">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.PersistentState.Transient">
            <summary>
            瞬态:在数据库中没有与之相对应的记录
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.PersistentState.Persistent">
            <summary>
            持久态:在数据库中存在与之相对应的记录
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.PersistentState.Deleted">
            <summary>
            已删除:在数据库中已删除相对应的记录
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.FatalException">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.FatalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:M2SA.AppGenome.FatalException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:M2SA.AppGenome.FatalException.#ctor(System.Exception)">
            <summary>
            
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:M2SA.AppGenome.FatalException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:M2SA.AppGenome.FatalException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.TaskThreadException">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.TaskThreadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:M2SA.AppGenome.TaskThreadException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:M2SA.AppGenome.TaskThreadException.#ctor(System.Exception)">
            <summary>
            
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:M2SA.AppGenome.TaskThreadException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:M2SA.AppGenome.TaskThreadException.#ctor">
            <summary>
            
            </summary>        
        </member>
        <member name="T:M2SA.AppGenome.ExceptionExtension">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.ExceptionExtension.Handle(System.Action)">
            <summary>
            
            </summary>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.ExceptionExtension.Handle(System.Action,System.Collections.IDictionary)">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="bizInfo"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.ExceptionExtension.Handle(System.Action,System.String)">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="policyName"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.ExceptionExtension.Handle(System.Action,System.String,System.Collections.IDictionary)">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="policyName"></param>
            <param name="bizInfo"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.ExceptionExtension.HandleException(System.Exception)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.ExceptionExtension.HandleException(System.Exception,System.Collections.IDictionary)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="bizInfo"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.ExceptionExtension.HandleException(System.Exception,System.String)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="policyName"></param>
            <returns></returns>
            <example>
            The following code shows the usage of the 
            exception handling framework.
            <code>
            try
            {
            	DoWork();
            }
            catch (Exception e)
            {
            	if (e.HandleException(policyName)) throw;
            }
            </code>
            </example>
        </member>
        <member name="M:M2SA.AppGenome.ExceptionExtension.HandleException(System.Exception,System.String,System.Collections.IDictionary)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="policyName"></param>
            <param name="bizInfo"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.ExceptionExtension.HandleException(System.Exception,System.String,System.Exception@)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="policyName"></param>
            <param name="exceptionToThrow"></param>
            <returns></returns>
            <example>
            The following code shows the usage of the 
            exception handling framework.
            <code>
            try
            {
            	DoWork();
            }
            catch (Exception e)
            {
                Exception exceptionToThrow;
            	if (ExceptionPolicy.HandleException(e, name, out exceptionToThrow))
            	{
            	  if(exceptionToThrow == null)
            	    throw;
            	  else
            	    throw exceptionToThrow;
            	}
            }
            </code>
            </example>
        </member>
        <member name="M:M2SA.AppGenome.ExceptionExtension.HandleException(System.Exception,System.String,System.Collections.IDictionary,System.Exception@)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="policyName"></param>
            <param name="exceptionToThrow"></param>
            <param name="bizInfo"></param>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.ApplicationHost">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.ApplicationHost.GetInstance(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="E:M2SA.AppGenome.ApplicationHost.Exit">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.ApplicationHost.IsRunning">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.ApplicationHost.HostProcessId">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.ApplicationHost.HostProcessName">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.ApplicationHost.CommandArguments">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.ApplicationHost.Init">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.ApplicationHost.Start">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.ApplicationHost.Stop">
            <summary>
            
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.FileHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.FileHelper.GetFullPath(System.String)">
            <summary>
            
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.FileHelper.WriteInfo(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="filePath"></param>
            <param name="content"></param>
        </member>
        <member name="M:M2SA.AppGenome.FileHelper.WriteInfo(System.String,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="filePath"></param>
            <param name="content"></param>
            <param name="tryTimes"></param>
        </member>
        <member name="M:M2SA.AppGenome.FileHelper.Delete(System.String)">
            <summary>
            
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:M2SA.AppGenome.FileHelper.TryDeleteDirectory(System.String)">
            <summary>
            
            </summary>
            <param name="dir"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.FileHelper.CreateDirectory(System.String)">
            <summary>
            
            </summary>
            <param name="dir"></param>
        </member>
        <member name="M:M2SA.AppGenome.FileHelper.CreateDirectoryForFile(System.String)">
            <summary>
            
            </summary>
            <param name="file"></param>
        </member>
        <member name="T:M2SA.AppGenome.LockDecorator`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:M2SA.AppGenome.LockDecorator`1.Work(System.Action[])">
            <summary>
            
            </summary>
            <param name="actions"></param>
        </member>
        <member name="T:M2SA.AppGenome.NonSerializedPropertyAttribute">
            <summary>
            指示可序列化类的某个字段不应被序列化。无法继承此类。
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.NonSerializedPropertyAttribute.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.PluralRule">
            <summary>
            单复数规则
            <remarks>rails 单复数规则实现</remarks>
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.PluralRule.TranslateToPlural(System.String)">
            <summary>
            获得单词的复数形式
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.Queues.ReceiveMessageCompletedEventHandler">
            <summary>
            消息接收完时触发的事件委托
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:M2SA.AppGenome.Queues.IMessageQueue">
            <summary>
            消息队列的接口
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Queues.IMessageQueue.Name">
            <summary>
            队列名称
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Queues.IMessageQueue.Path">
            <summary>
            队列路径
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Queues.IMessageQueue.Count">
            <summary>
            等待处理的队列个数
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Queues.IMessageQueue.IngoingCount">
            <summary>
            等待传入的队列个数
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Queues.IMessageQueue.CanWrite">
            <summary>
            
            </summary>
        </member>
        <member name="E:M2SA.AppGenome.Queues.IMessageQueue.ReceiveCompleted">
            <summary>
            异步读取消息模式，当消息接收完时触发的事件
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Queues.IMessageQueue.Send(System.Object)">
            <summary>
            将消息发送到队列
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:M2SA.AppGenome.Queues.IMessageQueue.BeginReceive">
            <summary>
            开始异步读取消息，当消息接收完时触发事件ReceiveCompleted
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Queues.IMessageQueue.Receive">
            <summary>
            同步读取消息
            当队列没有消息时，阻塞当前线程，等待队列有消息后返回消息体
            </summary>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.Queues.IQueueFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Queues.IQueueFactory.GetQueue(System.String)">
            <summary>
            获取IMessageQueue的默认实例
            </summary>
            <param name="queueName"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Queues.IQueueFactory.GetQueueByDataType(System.String)">
            <summary>
            获取IMessageQueue的指定类别的实例
            </summary>
            <param name="dataType"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Queues.IQueueFactory.ExistsQueue(System.String)">
            <summary>
            是否存在指定类别的IMessageQueue
            </summary>
            <param name="queueName"></param>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.Queues.QueueManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Queues.QueueManager.GetQueue(System.String)">
            <summary>
            获取IMessageQueue的默认实例
            </summary>
            <param name="queueName"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Queues.QueueManager.GetQueueByDataType(System.String)">
            <summary>
            根据IMessageQueue关联的类型获取IMessageQueue实例
            </summary>
            <param name="dataType"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Queues.QueueManager.SendToQueue(System.Object,System.String)">
            <summary>
            将消息发送到指定队列
            </summary>
            <param name="message"></param>
            <param name="queueName"></param>
        </member>
        <member name="M:M2SA.AppGenome.Queues.QueueManager.GetQueueLength(System.String)">
            <summary>
            获取指定队列的队列长度
            </summary>
            <param name="queueName"></param>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.Reflection.AccessorType">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Reflection.AccessorType.Emit">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Reflection.AccessorType.Reflection">
            <summary>
            
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.Reflection.ClassAccessorFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.ClassAccessorFactory.CreateClassAccessor(System.Type,M2SA.AppGenome.Reflection.AccessorType)">
            <summary>
            
            </summary>
            <param name="targetType"></param>
            <param name="accessorType"></param>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.Reflection.ClassAccessorRepository">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.ClassAccessorRepository.GetClassAccessor(System.Object)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.ClassAccessorRepository.GetClassAccessor(System.Object,M2SA.AppGenome.Reflection.AccessorType)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="accessorType"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.ClassAccessorRepository.GetClassAccessor(System.Type)">
            <summary>
            
            </summary>
            <param name="targetType"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.ClassAccessorRepository.GetClassAccessor(System.Type,M2SA.AppGenome.Reflection.AccessorType)">
            <summary>
            
            </summary>
            <param name="targetType"></param>
            <param name="accessorType"></param>
            <returns></returns>
        </member>
        <member name="P:M2SA.AppGenome.Reflection.EmitClassAccessor.PropertyAccessores">
            <summary>
            类型的实例属性
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.EmitClassAccessor.#ctor(System.Type)">
            <summary>
            Creates a new property accessor.
            </summary>
            <param name="targetType">Target object type.</param>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.EmitClassAccessor.GetValue(System.Object,System.String)">
            <summary>
            Gets the value stored in the property for 
            the specified target.
            </summary>
            <param name="target">Object to retrieve the property from.</param>
            <param name="propertyName"></param>
            <returns>Property value.</returns>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.EmitClassAccessor.SetValue(System.Object,System.String,System.Object)">
            <summary>
            Sets the value for the property of
            the specified target.
            </summary>
            <param name="target">Object to set the property on.</param>
            <param name="propertyName"></param>
            <param name="value">Property value.</param>
        </member>
        <member name="T:M2SA.AppGenome.Reflection.EmitPropertyAccessor">
            <summary>
            The EmitPropertyAccessor class provides fast dynamic access
            to a property of a specified target class.
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Reflection.EmitPropertyAccessor.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Reflection.EmitPropertyAccessor.CanRead">
            <summary>
            Whether or not the Property supports read access.
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Reflection.EmitPropertyAccessor.CanWrite">
            <summary>
            Whether or not the Property supports write access.
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Reflection.EmitPropertyAccessor.TargetType">
            <summary>
            The MetaType of object this property accessor was
            created for.
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Reflection.EmitPropertyAccessor.PropertyType">
            <summary>
            The MetaType of the Property being accessed.
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.EmitPropertyAccessor.#ctor(System.Type,System.String)">
            <summary>
            Creates a new property accessor.
            </summary>
            <param name="targetType">Target object type.</param>
            <param name="property">Property name.</param>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.EmitPropertyAccessor.Get(System.Object)">
            <summary>
            Gets the property value from the specified target.
            </summary>
            <param name="target">Target object.</param>
            <returns>Property value.</returns>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.EmitPropertyAccessor.Set(System.Object,System.Object)">
            <summary>
            Sets the property for the specified target.
            </summary>
            <param name="target">Target object.</param>
            <param name="value">Value to set.</param>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.EmitPropertyAccessor.Init">
            <summary>
            This method generates creates a new assembly containing
            the MetaType that will provide dynamic access.
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.EmitPropertyAccessor.InitTypes">
            <summary>
            Thanks to Ben Ratzlaff for this snippet of code
            http://www.codeproject.com/cs/miscctrl/CustomPropGrid.asp
            
            "Initialize a private hashtable with type-opCode pairs 
            so i dont have to write a long if/else statement when outputting msil"
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.EmitPropertyAccessor.EmitAssembly">
            <summary>
            Create an assembly that will provide the get and set methods.
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.Reflection.IClassAccessor">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Reflection.IClassAccessor.PropertyAccessores">
            <summary>
            类型的实例属性
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.IClassAccessor.GetValue(System.Object,System.String)">
            <summary>
            Gets the value stored in the property for 
            the specified target.
            </summary>
            <param name="target">Object to retrieve the property from.</param>
            <param name="propertyName"></param>
            <returns>Property value.</returns>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.IClassAccessor.SetValue(System.Object,System.String,System.Object)">
            <summary>
            Sets the value for the property of
            the specified target.
            </summary>
            <param name="target">Object to set the property on.</param>
            <param name="propertyName"></param>
            <param name="value">Property value.</param>
        </member>
        <member name="T:M2SA.AppGenome.Reflection.IPropertyAccessor">
            <summary>
            The IPropertyAccessor interface defines a property
            accessor.
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.IPropertyAccessor.Get(System.Object)">
            <summary>
            Gets the value stored in the property for 
            the specified target.
            </summary>
            <param name="target">Object to retrieve
            the property from.</param>
            <returns>Property value.</returns>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.IPropertyAccessor.Set(System.Object,System.Object)">
            <summary>
            Sets the value for the property of
            the specified target.
            </summary>
            <param name="target">Object to set the
            property on.</param>
            <param name="value">Property value.</param>
        </member>
        <member name="T:M2SA.AppGenome.Reflection.IPropertyAccessorInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Reflection.IPropertyAccessorInfo.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Reflection.IPropertyAccessorInfo.CanRead">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Reflection.IPropertyAccessorInfo.CanWrite">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Reflection.IPropertyAccessorInfo.NonSerialized">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Reflection.IPropertyAccessorInfo.PropertyType">
            <summary>
            
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.Reflection.ObjectExtension">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.ObjectExtension.Print(System.Object)">
            <summary>
            打印对象信息
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.ObjectExtension.ToText(System.Object)">
            <summary>
            
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.ObjectExtension.ToXmlText(System.Object)">
            <summary>
            
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.ObjectExtension.ToXml(System.Object)">
            <summary>
            
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.ObjectExtension.GetPropertyValues(System.Object)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.ObjectExtension.GetPropertyValues(System.Object,System.Collections.Generic.IList{System.String})">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="propertyNames"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.ObjectExtension.SetPropertyValues(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="propertyValues"></param>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.ObjectExtension.SetPropertyValues(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},M2SA.AppGenome.Reflection.AccessorType)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="propertyValues"></param>
            <param name="accessorType"></param>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.ObjectExtension.Convert``1(System.Object)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.ObjectExtension.Convert``1(System.Object,``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.ObjectExtension.Convert(System.Object,System.Type)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.Reflection.ObjectFormatExtension">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.ObjectFormatExtension.ToText(System.Object,System.String)">
            <summary>
            
            </summary>
            <param name="val"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.ObjectFormatExtension.ToXmlText(System.Object,System.String)">
            <summary>
            
            </summary>
            <param name="val"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.ObjectFormatExtension.ToText(System.Object,System.String,System.Func{System.Object,System.String})">
            <summary>
            
            </summary>
            <param name="val"></param>
            <param name="format"></param>
            <param name="ToTextFunc"></param>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.Reflection.PropertyAccessorException">
            <summary>
            PropertyAccessorException class.
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.PropertyAccessorException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.PropertyAccessorException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.PropertyAccessorException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.PropertyAccessorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="si"></param>
            <param name="sc"></param>
        </member>
        <member name="P:M2SA.AppGenome.Reflection.ReflectionClassAccessor.PropertyAccessores">
            <summary>
            类型的实例属性
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.ReflectionClassAccessor.#ctor(System.Type)">
            <summary>
            Creates a new property accessor.
            </summary>
            <param name="targetType">Target object type.</param>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.ReflectionClassAccessor.GetValue(System.Object,System.String)">
            <summary>
            Gets the value stored in the property for 
            the specified target.
            </summary>
            <param name="target">Object to retrieve the property from.</param>
            <param name="propertyName"></param>
            <returns>Property value.</returns>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.ReflectionClassAccessor.SetValue(System.Object,System.String,System.Object)">
            <summary>
            Sets the value for the property of
            the specified target.
            </summary>
            <param name="target">Object to set the property on.</param>
            <param name="propertyName"></param>
            <param name="value">Property value.</param>
        </member>
        <member name="T:M2SA.AppGenome.Reflection.ReflectionPropertyAccessor">
            <summary>
            The EmitPropertyAccessor class provides fast dynamic access
            to a property of a specified target class.
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Reflection.ReflectionPropertyAccessor.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Reflection.ReflectionPropertyAccessor.CanRead">
            <summary>
            Whether or not the Property supports read access.
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Reflection.ReflectionPropertyAccessor.CanWrite">
            <summary>
            Whether or not the Property supports write access.
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Reflection.ReflectionPropertyAccessor.NonSerialized">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Reflection.ReflectionPropertyAccessor.TargetType">
            <summary>
            The MetaType of object this property accessor was
            created for.
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Reflection.ReflectionPropertyAccessor.PropertyType">
            <summary>
            The MetaType of the Property being accessed.
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.ReflectionPropertyAccessor.#ctor(System.Type,System.String)">
            <summary>
            Creates a new property accessor.
            </summary>
            <param name="targetType">Target object type.</param>
            <param name="property">Property name.</param>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.ReflectionPropertyAccessor.Get(System.Object)">
            <summary>
            Gets the property value from the specified target.
            </summary>
            <param name="target">Target object.</param>
            <returns>Property value.</returns>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.ReflectionPropertyAccessor.Set(System.Object,System.Object)">
            <summary>
            Sets the property for the specified target.
            </summary>
            <param name="target">Target object.</param>
            <param name="value">Value to set.</param>
        </member>
        <member name="T:M2SA.AppGenome.Reflection.TypeExtension">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.TypeExtension.IsPrimitiveType(System.Type)">
            <summary>
            是否是基础类型
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.TypeExtension.IsNullable(System.Type)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.TypeExtension.IsListType(System.Type)">
            <summary>
            是否是IList
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.TypeExtension.IsDictionaryType(System.Type)">
            <summary>
            是否是IList
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.TypeExtension.GetMapType(System.Type)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.TypeExtension.GetMapType(System.String)">
            <summary>
            
            </summary>
            <param name="typeAlias"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.TypeExtension.GetSimpleQualifiedName(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.TypeExtension.CanCreated(System.Type)">
            <summary>
            类型是否可以创建实例
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.TypeExtension.GetPersistProperties(System.Type)">
            <summary>
            获取指定类型的可以被持久化的属性列表
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.TypeExtension.GetPersistProperties(System.Type,M2SA.AppGenome.Reflection.AccessorType)">
            <summary>
            获取指定类型的可以被持久化的属性列表
            </summary>
            <param name="type"></param>
            <param name="accessorType"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.TypeExtension.GetPersistProperties(System.Type,M2SA.AppGenome.Reflection.IClassAccessor)">
            <summary>
            获取指定类型的可以被持久化的属性列表
            </summary>
            <param name="type"></param>
            <param name="accessor"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Reflection.TypeExtension.GetPropertyType(System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.StringExtension">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.StringExtension.IsMatchInteger(System.String)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.StringExtension.IsMatchEMail(System.String)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.StringExtension.IsMatchHttpUrl(System.String)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.Threading.CronExpression">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.CronExpression.Second">
            <summary>
            Field specification for second.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.CronExpression.Minute">
            <summary>
            Field specification for minute.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.CronExpression.Hour">
            <summary>
            Field specification for hour.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.CronExpression.DayOfMonth">
            <summary>
            Field specification for day of month.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.CronExpression.Month">
            <summary>
            Field specification for month.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.CronExpression.DayOfWeek">
            <summary>
            Field specification for day of week.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.CronExpression.Year">
            <summary>
            Field specification for year.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.CronExpression.AllSpecValue">
            <summary>
            Field specification for all wildcard value '*'.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.CronExpression.NoSpecValue">
            <summary>
            Field specification for not specified value '?'.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.CronExpression.AllSpec">
            <summary>
            Field specification for wildcard '*'.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.CronExpression.NoSpec">
            <summary>
            Field specification for no specification at all '?'.
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.CronExpression.#ctor(System.String)">
            <summary>
             Constructs a new <see cref="P:M2SA.AppGenome.Threading.CronExpression.CronExpressionString" /> based on the specified 
             parameter.
             </summary>
             <param name="cronExpression">
             String representation of the cron expression the new object should represent
             </param>
             <see cref="P:M2SA.AppGenome.Threading.CronExpression.CronExpressionString" />
        </member>
        <member name="M:M2SA.AppGenome.Threading.CronExpression.IsSatisfiedBy(System.DateTime)">
            <summary>
            Indicates whether the given date satisfies the cron expression. 
            </summary>
            <remarks>
            Note that  milliseconds are ignored, so two Dates falling on different milliseconds
            of the same second will always have the same result here.
            </remarks>
            <param name="dateUtc">The date to evaluate.</param>
            <returns>a boolean indicating whether the given date satisfies the cron expression</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.CronExpression.GetNextValidTimeAfter(System.DateTime)">
            <summary>
            Returns the next date/time <i>after</i> the given date/time which
            satisfies the cron expression.
            </summary>
            <param name="dateTime">the date/time at which to begin the search for the next valid date/time</param>
            <returns>the next valid date/time</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.CronExpression.GetNextInvalidTimeAfter(System.DateTime)">
            <summary>
            Returns the next date/time <i>after</i> the given date/time which does
            <i>not</i> satisfy the expression.
            </summary>
            <param name="dateTime">the date/time at which to begin the search for the next invalid date/time</param>
            <returns>the next valid date/time</returns>
        </member>
        <member name="P:M2SA.AppGenome.Threading.CronExpression.TimeZone">
            <summary>
            Sets or gets the time zone for which the <see cref="T:M2SA.AppGenome.Threading.CronExpression" /> of this        
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.CronExpression.ToString">
            <summary>
            Returns the string representation of the <see cref="T:M2SA.AppGenome.Threading.CronExpression" />
            </summary>
            <returns>The string representation of the <see cref="T:M2SA.AppGenome.Threading.CronExpression" /></returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.CronExpression.IsValidExpression(System.String)">
            <summary>
            Indicates whether the specified cron expression can be parsed into a 
            valid cron expression
            </summary>
            <param name="cronExpression">the expression to evaluate</param>
            <returns>a boolean indicating whether the given expression is a valid cron
                    expression</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.CronExpression.BuildExpression(System.String)">
            <summary>
            Builds the expression.
            </summary>
            <param name="expression">The expression.</param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.CronExpression.StoreExpressionVals(System.Int32,System.String,System.Int32)">
            <summary>
            Stores the expression values.
            </summary>
            <param name="pos">The position.</param>
            <param name="values">The string to traverse.</param>
            <param name="type">The type of value.</param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.CronExpression.CheckNext(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Checks the next value.
            </summary>
            <param name="pos">The position.</param>
            <param name="checks">The string to check.</param>
            <param name="val">The value.</param>
            <param name="type">The type to search.</param>
            <returns></returns>
        </member>
        <member name="P:M2SA.AppGenome.Threading.CronExpression.CronExpressionString">
            <summary>
            Gets the cron expression string.
            </summary>
            <value>The cron expression string.</value>
        </member>
        <member name="M:M2SA.AppGenome.Threading.CronExpression.GetExpressionSummary">
            <summary>
            Gets the expression summary.
            </summary>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.CronExpression.GetExpressionTreeListSummary(M2SA.AppGenome.Threading.ITreeList)">
            <summary>
            Gets the expression set summary.
            </summary>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.CronExpression.SkipWhiteSpace(System.Int32,System.String)">
            <summary>
            Skips the white space.
            </summary>
            <param name="index">The i.</param>
            <param name="val">The s.</param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.CronExpression.FindNextWhiteSpace(System.Int32,System.String)">
            <summary>
            Finds the next white space.
            </summary>
            <param name="index">The i.</param>
            <param name="val">The s.</param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.CronExpression.AddToTreeList(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds to set.
            </summary>
            <param name="val">The val.</param>
            <param name="endIndex">The end.</param>
            <param name="incr">The incr.</param>
            <param name="type">The type.</param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.CronExpression.GetTreeList(System.Int32)">
            <summary>
            Gets the set of given type.
            </summary>
            <param name="type">The type of set to get.</param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.CronExpression.GetValue(System.Int32,System.String,System.Int32)">
            <summary>
            Gets the value.
            </summary>
            <param name="vc">The v.</param>
            <param name="str">The s.</param>
            <param name="index">The i.</param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.CronExpression.GetNumericValue(System.String,System.Int32)">
            <summary>
            Gets the numeric value from string.
            </summary>
            <param name="value">The string to parse from.</param>
            <param name="index">The i.</param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.CronExpression.GetMonthNumber(System.String)">
            <summary>
            Gets the month number.
            </summary>
            <param name="str">The string to map with.</param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.CronExpression.GetDayOfWeekNumber(System.String)">
            <summary>
            Gets the day of week number.
            </summary>
            <param name="str">The s.</param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.CronExpression.GetTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the time from given time parts.
            </summary>
            <param name="sc">The seconds.</param>
            <param name="mn">The minutes.</param>
            <param name="hr">The hours.</param>
            <param name="dayofmn">The day of month.</param>
            <param name="mon">The month.</param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.CronExpression.GetTimeAfter(System.DateTime)">
            <summary>
            Gets the next fire time after the given time.
            </summary>
            <param name="afterTimeUtc">The UTC time to start searching from.</param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.CronExpression.CreateDateTimeWithoutMillis(System.DateTime)">
            <summary>
            Creates the date time without milliseconds.
            </summary>
            <param name="time">The time.</param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.CronExpression.SetCalendarHour(System.DateTime,System.Int32)">
            <summary>
            Advance the calendar to the particular hour paying particular attention
            to daylight saving problems.
            </summary>
            <param name="date">The date.</param>
            <param name="hour">The hour.</param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.CronExpression.GetTimeBefore(System.Nullable{System.DateTime})">
            <summary>
            Gets the time before.
            </summary>
            <param name="endTime">The end time.</param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.CronExpression.GetFinalFireTime">
            <summary>
            NOT YET IMPLEMENTED: Returns the final time that the 
            <see cref="T:M2SA.AppGenome.Threading.CronExpression" /> will match.
            </summary>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.CronExpression.IsLeapYear(System.Int32)">
            <summary>
            Determines whether given year is a leap year.
            </summary>
            <param name="year">The year.</param>
            <returns>
            	<c>true</c> if the specified year is a leap year; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.CronExpression.GetLastDayOfMonth(System.Int32,System.Int32)">
            <summary>
            Gets the last day of month.
            </summary>
            <param name="monthNum">The month num.</param>
            <param name="year">The year.</param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.CronExpression.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.CronExpression.OnDeserialization(System.Object)">
            <summary>
            
            </summary>
            <param name="sender"></param>
        </member>
        <member name="T:M2SA.AppGenome.Threading.ValueSet">
            <summary>
            Helper class for cron expression handling.
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.ValueSet.TheValue">
            <summary>
            The value.
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.ValueSet.Pos">
            <summary>
            The position.
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.Threading.ITreeList">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.ITreeList.TailList(System.Int32)">
            <summary>
            获取列表中大于limit的元素列表
            </summary>
            <param name="limit"></param>
            <returns></returns>
        </member>
        <member name="P:M2SA.AppGenome.Threading.ITreeList.First">
            <summary>
            获取列表中第一个元素
            </summary>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.Threading.TreeList">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.TreeList.First">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.TreeList.TailList(System.Int32)">
            <summary>
            
            </summary>
            <param name="limit"></param>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.Threading.WorkItemCancelException">
            <summary>
            Represents an exception in case IWorkItemResult.GetResult has been canceled
            </summary>
            <summary>
            Represents an exception in case IWorkItemResult.GetResult has been canceled
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.WorkItemCancelException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.WorkItemCancelException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.WorkItemCancelException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="ex"></param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.WorkItemCancelException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="si"></param>
            <param name="sc"></param>
        </member>
        <member name="T:M2SA.AppGenome.Threading.WorkItemTimeoutException">
            <summary>
            Represents an exception in case IWorkItemResult.GetResult has been timed out
            </summary>
            <summary>
            Represents an exception in case IWorkItemResult.GetResult has been timed out
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.WorkItemTimeoutException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.WorkItemTimeoutException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.WorkItemTimeoutException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="ex"></param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.WorkItemTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="si"></param>
            <param name="sc"></param>
        </member>
        <member name="T:M2SA.AppGenome.Threading.WorkItemResultException">
            <summary>
            Represents an exception in case IWorkItemResult.GetResult has been timed out
            </summary>
            <summary>
            Represents an exception in case IWorkItemResult.GetResult has been timed out
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.WorkItemResultException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.WorkItemResultException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.WorkItemResultException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="ex"></param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.WorkItemResultException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="si"></param>
            <param name="sc"></param>
        </member>
        <member name="T:M2SA.AppGenome.Threading.WorkItemCallback">
            <summary>
            A delegate that represents the method to run as the work item
            </summary>
            <param name="state">A state object for the method to run</param>
        </member>
        <member name="T:M2SA.AppGenome.Threading.PostExecuteWorkItemCallback">
            <summary>
            A delegate to call after the WorkItemCallback completed
            </summary>
            <param name="wir">The work item result object</param>
        </member>
        <member name="T:M2SA.AppGenome.Threading.PostExecuteWorkItemCallback`1">
            <summary>
            A delegate to call after the WorkItemCallback completed
            </summary>
            <param name="wir">The work item result object</param>
        </member>
        <member name="T:M2SA.AppGenome.Threading.WorkItemsGroupIdleHandler">
            <summary>
            A delegate to call when a WorkItemsGroup becomes idle
            </summary>
            <param name="workItemsGroup">A reference to the WorkItemsGroup that became idle</param>
        </member>
        <member name="T:M2SA.AppGenome.Threading.ThreadInitializationHandler">
            <summary>
            A delegate to call after a thread is created, but before 
            it's first use.
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.Threading.ThreadTerminationHandler">
            <summary>
            A delegate to call when a thread is about to exit, after 
            it is no longer belong to the pool.
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.Threading.WorkItemPriority">
            <summary>
            Defines the availeable priorities of a work item.
            The higher the priority a work item has, the sooner
            it will be executed.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.WorkItemPriority.Lowest">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.WorkItemPriority.BelowNormal">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.WorkItemPriority.Normal">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.WorkItemPriority.AboveNormal">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.WorkItemPriority.Highest">
            <summary>
            
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.Threading.IWorkItemsGroup">
            <summary>
            IWorkItemsGroup interface
            Created by SmartThreadPool.CreateWorkItemsGroup()
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.IWorkItemsGroup.Name">
            <summary>
            Get/Set the name of the WorkItemsGroup
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.IWorkItemsGroup.Concurrency">
            <summary>
            Get/Set the maximum number of workitem that execute cocurrency on the thread pool
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.IWorkItemsGroup.WaitingCallbacks">
            <summary>
            Get the number of work items waiting in the queue.
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemsGroup.GetStates">
            <summary>
            Get an array with all the state objects of the currently running items.
            The array represents a snap shot and impact performance.
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.IWorkItemsGroup.WIGStartInfo">
            <summary>
            Get the WorkItemsGroup start information
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemsGroup.Start">
            <summary>
            Starts to execute work items
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemsGroup.Cancel">
            <summary>
            Cancel all the work items.
            Same as Cancel(false)
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemsGroup.Cancel(System.Boolean)">
            <summary>
            Cancel all work items using thread abortion
            </summary>
            <param name="abortExecution">True to stop work items by raising ThreadAbortException</param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemsGroup.WaitForIdle">
            <summary>
            Wait for all work item to complete.
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemsGroup.WaitForIdle(System.TimeSpan)">
            <summary>
            Wait for all work item to complete, until timeout expired
            </summary>
            <param name="timeout">How long to wait for the work items to complete</param>
            <returns>Returns true if work items completed within the timeout, otherwise false.</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemsGroup.WaitForIdle(System.Int32)">
            <summary>
            Wait for all work item to complete, until timeout expired
            </summary>
            <param name="millisecondsTimeout">How long to wait for the work items to complete in milliseconds</param>
            <returns>Returns true if work items completed within the timeout, otherwise false.</returns>
        </member>
        <member name="P:M2SA.AppGenome.Threading.IWorkItemsGroup.IsIdle">
            <summary>
            IsIdle is true when there are no work items running or queued.
            </summary>
        </member>
        <member name="E:M2SA.AppGenome.Threading.IWorkItemsGroup.OnIdle">
            <summary>
            This event is fired when all work items are completed.
            (When IsIdle changes to true)
            This event only work on WorkItemsGroup. On SmartThreadPool
            it throws the NotImplementedException.
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemsGroup.QueueWorkItem(M2SA.AppGenome.Threading.WorkItemCallback)">
            <summary>
            Queue a work item
            </summary>
            <param name="callback">A callback to execute</param>
            <returns>Returns a work item result</returns>        
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemsGroup.QueueWorkItem(M2SA.AppGenome.Threading.WorkItemCallback,M2SA.AppGenome.Threading.WorkItemPriority)">
            <summary>
            Queue a work item
            </summary>
            <param name="callback">A callback to execute</param>
            <param name="workItemPriority">The priority of the work item</param>
            <returns>Returns a work item result</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemsGroup.QueueWorkItem(M2SA.AppGenome.Threading.WorkItemCallback,System.Object)">
            <summary>
            Queue a work item
            </summary>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <returns>Returns a work item result</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemsGroup.QueueWorkItem(M2SA.AppGenome.Threading.WorkItemCallback,System.Object,M2SA.AppGenome.Threading.WorkItemPriority)">
            <summary>
            Queue a work item
            </summary>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <param name="workItemPriority">The work item priority</param>
            <returns>Returns a work item result</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemsGroup.QueueWorkItem(M2SA.AppGenome.Threading.WorkItemCallback,System.Object,M2SA.AppGenome.Threading.PostExecuteWorkItemCallback)">
            <summary>
            Queue a work item
            </summary>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <param name="postExecuteWorkItemCallback">
            A delegate to call after the callback completion
            </param>
            <returns>Returns a work item result</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemsGroup.QueueWorkItem(M2SA.AppGenome.Threading.WorkItemCallback,System.Object,M2SA.AppGenome.Threading.PostExecuteWorkItemCallback,M2SA.AppGenome.Threading.WorkItemPriority)">
            <summary>
            Queue a work item
            </summary>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <param name="postExecuteWorkItemCallback">
            A delegate to call after the callback completion
            </param>
            <param name="workItemPriority">The work item priority</param>
            <returns>Returns a work item result</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemsGroup.QueueWorkItem(M2SA.AppGenome.Threading.WorkItemCallback,System.Object,M2SA.AppGenome.Threading.PostExecuteWorkItemCallback,M2SA.AppGenome.Threading.CallToPostExecute)">
            <summary>
            Queue a work item
            </summary>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <param name="postExecuteWorkItemCallback">
            A delegate to call after the callback completion
            </param>
            <param name="callToPostExecute">Indicates on which cases to call to the post execute callback</param>
            <returns>Returns a work item result</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemsGroup.QueueWorkItem(M2SA.AppGenome.Threading.WorkItemCallback,System.Object,M2SA.AppGenome.Threading.PostExecuteWorkItemCallback,M2SA.AppGenome.Threading.CallToPostExecute,M2SA.AppGenome.Threading.WorkItemPriority)">
            <summary>
            Queue a work item
            </summary>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <param name="postExecuteWorkItemCallback">
            A delegate to call after the callback completion
            </param>
            <param name="callToPostExecute">Indicates on which cases to call to the post execute callback</param>
            <param name="workItemPriority">The work item priority</param>
            <returns>Returns a work item result</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemsGroup.QueueWorkItem(M2SA.AppGenome.Threading.WorkItemInfo,M2SA.AppGenome.Threading.WorkItemCallback)">
            <summary>
            Queue a work item
            </summary>
            <param name="workItemInfo">Work item info</param>
            <param name="callback">A callback to execute</param>
            <returns>Returns a work item result</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemsGroup.QueueWorkItem(M2SA.AppGenome.Threading.WorkItemInfo,M2SA.AppGenome.Threading.WorkItemCallback,System.Object)">
            <summary>
            Queue a work item
            </summary>
            <param name="workItemInfo">Work item information</param>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <returns>Returns a work item result</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemsGroup.QueueWorkItem(System.Action)">
            <summary>
            Queue a work item.
            </summary>
            <returns>Returns a IWorkItemResult object, but its GetResult() will always return null</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemsGroup.QueueWorkItem``1(System.Action{``0},``0)">
            <summary>
            Queue a work item.
            </summary>
            <returns>Returns a IWorkItemResult object, but its GetResult() will always return null</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemsGroup.QueueWorkItem``2(System.Action{``0,``1},``0,``1)">
            <summary>
            Queue a work item.
            </summary>
            <returns>Returns a IWorkItemResult object, but its GetResult() will always return null</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemsGroup.QueueWorkItem``3(System.Action{``0,``1,``2},``0,``1,``2)">
            <summary>
            Queue a work item.
            </summary>
            <returns>Returns a IWorkItemResult object, but its GetResult() will always return null</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemsGroup.QueueWorkItem``4(System.Action{``0,``1,``2,``3},``0,``1,``2,``3)">
            <summary>
            Queue a work item.
            </summary>
            <returns>Returns a IWorkItemResult object, but its GetResult() will always return null</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemsGroup.QueueWorkItem``1(System.Func{``0})">
            <summary>
            Queue a work item.
            </summary>
            <returns>Returns a IWorkItemResult[TResult] object. 
            its GetResult() returns a TResult object</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemsGroup.QueueWorkItem``2(System.Func{``0,``1},``0)">
            <summary>
            Queue a work item.
            </summary>
            <returns>Returns a IWorkItemResult[TResult] object. 
            its GetResult() returns a TResult object</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemsGroup.QueueWorkItem``3(System.Func{``0,``1,``2},``0,``1)">
            <summary>
            Queue a work item.
            </summary>
            <returns>Returns a IWorkItemResult[TResult] object. 
            its GetResult() returns a TResult object</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemsGroup.QueueWorkItem``4(System.Func{``0,``1,``2,``3},``0,``1,``2)">
            <summary>
            Queue a work item.
            </summary>
            <returns>Returns a IWorkItemResult[TResult] object. 
            its GetResult() returns a TResult object</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemsGroup.QueueWorkItem``5(System.Func{``0,``1,``2,``3,``4},``0,``1,``2,``3)">
            <summary>
            Queue a work item.
            </summary>
            <returns>Returns a IWorkItemResult[TResult] object. 
            its GetResult() returns a TResult object</returns>
        </member>
        <member name="T:M2SA.AppGenome.Threading.CallToPostExecute">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.CallToPostExecute.Never">
            <summary>
            Never call to the PostExecute call back
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.CallToPostExecute.WhenWorkItemCanceled">
            <summary>
            Call to the PostExecute only when the work item is cancelled
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.CallToPostExecute.WhenWorkItemNotCanceled">
            <summary>
            Call to the PostExecute only when the work item is not cancelled
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.CallToPostExecute.Always">
            <summary>
            Always call to the PostExecute
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.Threading.IWaitableResult">
            <summary>
            The common interface of IWorkItemResult and IWorkItemResult[T]
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWaitableResult.GetWorkItemResult">
            <summary>
            This method intent is for internal use.
            </summary>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWaitableResult.GetWorkItemResultT``1">
            <summary>
            This method intent is for internal use.
            </summary>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.Threading.IWorkItemResult">
            <summary>
            IWorkItemResult interface.
            Created when a WorkItemCallback work item is queued.
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.Threading.IWorkItemResult`1">
            <summary>
            IWorkItemResult[TResult] interface.
            Created when a Func[T] work item is queued.
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemResult`1.GetResult">
            <summary>
            Get the result of the work item.
            If the work item didn't run yet then the caller waits.
            </summary>
            <returns>The result of the work item</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemResult`1.GetResult(System.Int32,System.Boolean)">
            <summary>
            Get the result of the work item.
            If the work item didn't run yet then the caller waits until timeout.
            </summary>
            <returns>The result of the work item</returns>
            On timeout throws WorkItemTimeoutException
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemResult`1.GetResult(System.TimeSpan,System.Boolean)">
            <summary>
            Get the result of the work item.
            If the work item didn't run yet then the caller waits until timeout.
            </summary>
            <returns>The result of the work item</returns>
            On timeout throws WorkItemTimeoutException
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemResult`1.GetResult(System.Int32,System.Boolean,System.Threading.WaitHandle)">
            <summary>
            Get the result of the work item.
            If the work item didn't run yet then the caller waits until timeout or until the cancelWaitHandle is signaled.
            </summary>
            <param name="millisecondsTimeout">Timeout in milliseconds, or -1 for infinite</param>
            <param name="exitContext">
            true to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it; otherwise, false. 
            </param>
            <param name="cancelWaitHandle">A cancel wait handle to interrupt the blocking if needed</param>
            <returns>The result of the work item</returns>
            On timeout throws WorkItemTimeoutException
            On cancel throws WorkItemCancelException
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemResult`1.GetResult(System.TimeSpan,System.Boolean,System.Threading.WaitHandle)">
            <summary>
            Get the result of the work item.
            If the work item didn't run yet then the caller waits until timeout or until the cancelWaitHandle is signaled.
            </summary>
            <returns>The result of the work item</returns>
            On timeout throws WorkItemTimeoutException
            On cancel throws WorkItemCancelException
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemResult`1.GetResult(System.Exception@)">
            <summary>
            Get the result of the work item.
            If the work item didn't run yet then the caller waits.
            </summary>
            <param name="ex">Filled with the exception if one was thrown</param>
            <returns>The result of the work item</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemResult`1.GetResult(System.Int32,System.Boolean,System.Exception@)">
            <summary>
            Get the result of the work item.
            If the work item didn't run yet then the caller waits until timeout.
            </summary>
            <param name="millisecondsTimeout"></param>
            <param name="exitContext"></param>
            <param name="ex">Filled with the exception if one was thrown</param>
            <returns>The result of the work item</returns>
            On timeout throws WorkItemTimeoutException
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemResult`1.GetResult(System.TimeSpan,System.Boolean,System.Exception@)">
            <summary>
            Get the result of the work item.
            If the work item didn't run yet then the caller waits until timeout.
            </summary>
            <param name="exitContext"></param>
            <param name="ex">Filled with the exception if one was thrown</param>
            <param name="timeout"></param>
            <returns>The result of the work item</returns>
            On timeout throws WorkItemTimeoutException
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemResult`1.GetResult(System.Int32,System.Boolean,System.Threading.WaitHandle,System.Exception@)">
            <summary>
            Get the result of the work item.
            If the work item didn't run yet then the caller waits until timeout or until the cancelWaitHandle is signaled.
            </summary>
            <param name="millisecondsTimeout">Timeout in milliseconds, or -1 for infinite</param>
            <param name="exitContext">
            true to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it; otherwise, false. 
            </param>
            <param name="cancelWaitHandle">A cancel wait handle to interrupt the blocking if needed</param>
            <param name="ex">Filled with the exception if one was thrown</param>
            <returns>The result of the work item</returns>
            On timeout throws WorkItemTimeoutException
            On cancel throws WorkItemCancelException
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemResult`1.GetResult(System.TimeSpan,System.Boolean,System.Threading.WaitHandle,System.Exception@)">
            <summary>
            Get the result of the work item.
            If the work item didn't run yet then the caller waits until timeout or until the cancelWaitHandle is signaled.
            </summary>
            <returns>The result of the work item</returns>
            <param name="cancelWaitHandle"></param>
            <param name="ex">Filled with the exception if one was thrown</param>
            <param name="timeout"></param>
            <param name="exitContext"></param>
            On timeout throws WorkItemTimeoutException
            On cancel throws WorkItemCancelException
        </member>
        <member name="P:M2SA.AppGenome.Threading.IWorkItemResult`1.IsCompleted">
            <summary>
            Gets an indication whether the asynchronous operation has completed.
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.IWorkItemResult`1.IsCanceled">
            <summary>
            Gets an indication whether the asynchronous operation has been canceled.
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.IWorkItemResult`1.State">
            <summary>
            Gets the user-defined object that contains context data 
            for the work item method.
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemResult`1.Cancel">
            <summary>
            Same as Cancel(false).
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.IWorkItemResult`1.Cancel(System.Boolean)">
            <summary>
            Cancel the work item execution.
            If the work item is in the queue then it won't execute
            If the work item is completed, it will remain completed
            If the work item is in progress then the user can check the SmartThreadPool.IsWorkItemCanceled
              property to check if the work item has been cancelled. If the abortExecution is set to true then
              the Smart Thread Pool will send an AbortException to the running thread to stop the execution 
              of the work item. When an in progress work item is canceled its GetResult will throw WorkItemCancelException.
            If the work item is already cancelled it will remain cancelled
            </summary>
            <param name="abortExecution">When true send an AbortException to the executing thread.</param>
            <returns>Returns true if the work item was not completed, otherwise false.</returns>
        </member>
        <member name="P:M2SA.AppGenome.Threading.IWorkItemResult`1.WorkItemPriority">
            <summary>
            Get the work item's priority
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.IWorkItemResult`1.Result">
            <summary>
            Return the result, same as GetResult()
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.IWorkItemResult`1.Exception">
            <summary>
            Returns the exception if occured otherwise returns null.
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.Threading.Internal.CallerThreadContext">
            <summary>
            This class stores the caller call context in order to restore
            it when the work item is executed in the thread pool environment. 
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.CallerThreadContext.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.CallerThreadContext.Capture(System.Boolean,System.Boolean)">
            <summary>
            Captures the current thread context
            </summary>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.CallerThreadContext.Apply(M2SA.AppGenome.Threading.Internal.CallerThreadContext)">
            <summary>
            Applies the thread context stored earlier
            </summary>
            <param name="callerThreadContext"></param>
        </member>
        <member name="T:M2SA.AppGenome.Threading.Internal.EventWaitHandleFactory">
            <summary>
            EventWaitHandleFactory class.
            This is a static class that creates AutoResetEvent and ManualResetEvent objects.
            In WindowCE the WaitForMultipleObjects API fails to use the Handle property 
            of XxxResetEvent. It can use only handles that were created by the CreateEvent API.
            Consequently this class creates the needed XxxResetEvent and replaces the handle if
            it's a WindowsCE OS.
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.EventWaitHandleFactory.CreateAutoResetEvent">
            <summary>
            Create a new AutoResetEvent object
            </summary>
            <returns>Return a new AutoResetEvent object</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.EventWaitHandleFactory.CreateManualResetEvent(System.Boolean)">
            <summary>
            Create a new ManualResetEvent object
            </summary>
            <returns>Return a new ManualResetEvent object</returns>
        </member>
        <member name="T:M2SA.AppGenome.Threading.Internal.WorkItemStateCallback">
            <summary>
            An internal delegate to call when the WorkItem starts or completes
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.IInternalWaitableResult.GetWorkItemResult">
            <summary>
            This method is intent for internal use.
            </summary>   
        </member>
        <member name="T:M2SA.AppGenome.Threading.Internal.IHasWorkItemPriority">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.Internal.IHasWorkItemPriority.WorkItemPriority">
            <summary>
            
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.Threading.Internal.PriorityQueue">
            <summary>
            PriorityQueue class
            This class is not thread safe because we use external lock
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.PriorityQueue._queuesCount">
            <summary>
            The number of queues, there is one for each type of priority
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.PriorityQueue._queues">
            <summary>
            Work items queues. There is one for each type of priority
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.PriorityQueue._workItemsCount">
            <summary>
            The total number of work items within the queues 
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.PriorityQueue._version">
            <summary>
            Use with IEnumerable interface
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.PriorityQueue.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.PriorityQueue.Enqueue(M2SA.AppGenome.Threading.Internal.IHasWorkItemPriority)">
            <summary>
            Enqueue a work item.
            </summary>
            <param name="workItem">A work item</param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.PriorityQueue.Dequeue">
            <summary>
            Dequeque a work item.
            </summary>
            <returns>Returns the next work item</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.PriorityQueue.GetNextNonEmptyQueue(System.Int32)">
            <summary>
            Find the next non empty queue starting at queue queueIndex+1
            </summary>
            <param name="queueIndex">The index-1 to start from</param>
            <returns>
            The index of the next non empty queue or -1 if all the queues are empty
            </returns>
        </member>
        <member name="P:M2SA.AppGenome.Threading.Internal.PriorityQueue.Count">
            <summary>
            The number of work items 
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.PriorityQueue.Clear">
            <summary>
            Clear all the work items 
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.PriorityQueue.GetEnumerator">
            <summary>
            Returns an enumerator to iterate over the work items
            </summary>
            <returns>Returns an enumerator</returns>
        </member>
        <member name="T:M2SA.AppGenome.Threading.Internal.PriorityQueue.PriorityQueueEnumerator">
            <summary>
            The class the implements the enumerator
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.Threading.Internal.ISTPInstancePerformanceCounters">
            <summary>
            
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.Threading.Internal.STPPerformanceCounter">
            <summary>
            Summary description for STPPerformanceCounter.
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.Threading.Internal.WorkItem">
            <summary>
            Holds a callback delegate and the state for that delegate.
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.Threading.Internal.WorkItem.WorkItemState">
            <summary>
            Indicates the state of the work item in the thread pool
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.WorkItem._callback">
            <summary>
            Action delegate for the callback.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.WorkItem._state">
            <summary>
            Items with which to call the callback delegate.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.WorkItem._callerContext">
            <summary>
            Stores the caller's context
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.WorkItem._result">
            <summary>
            Holds the result of the mehtod
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.WorkItem._exception">
            <summary>
            Hold the exception if the method threw it
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.WorkItem._workItemState">
            <summary>
            Hold the state of the work item
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.WorkItem._workItemCompleted">
            <summary>
            A ManualResetEvent to indicate that the result is ready
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.WorkItem._workItemCompletedRefCount">
            <summary>
            A reference count to the _workItemCompleted. 
            When it reaches to zero _workItemCompleted is Closed
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.WorkItem._workItemResult">
            <summary>
            Represents the result state of the work item
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.WorkItem._workItemInfo">
            <summary>
            Work item info
            </summary>
        </member>
        <member name="E:M2SA.AppGenome.Threading.Internal.WorkItem._workItemStartedEvent">
            <summary>
            Called when the WorkItem starts
            </summary>
        </member>
        <member name="E:M2SA.AppGenome.Threading.Internal.WorkItem._workItemCompletedEvent">
            <summary>
            Called when the WorkItem completes
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.WorkItem._canceledWorkItemsGroup">
            <summary>
            A reference to an object that indicates whatever the 
            WorkItemsGroup has been canceled
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.WorkItem._canceledSmartThreadPool">
            <summary>
            A reference to an object that indicates whatever the 
            SmartThreadPool has been canceled
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.WorkItem._workItemsGroup">
            <summary>
            The work item group this work item belong to.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.WorkItem._executingThread">
            <summary>
            The thread that executes this workitem.
            This field is available for the period when the work item is executed, before and after it is null.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.WorkItem._expirationTime">
            <summary>
            The absulote time when the work item will be timeout
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.WorkItem._waitingOnQueueStopwatch">
            <summary>
            Stores how long the work item waited on the stp queue
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.WorkItem._processingStopwatch">
            <summary>
            Stores how much time it took the work item to execute after it went out of the queue
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.Internal.WorkItem.WaitingTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.Internal.WorkItem.ProcessTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.Internal.WorkItem.WorkItemInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItem.#ctor(M2SA.AppGenome.Threading.IWorkItemsGroup,M2SA.AppGenome.Threading.WorkItemInfo,M2SA.AppGenome.Threading.WorkItemCallback,System.Object)">
            <summary>
            Initialize the callback holding object.
            </summary>
            <param name="workItemsGroup">The workItemGroup of the workitem</param>
            <param name="workItemInfo">The WorkItemInfo of te workitem</param>
            <param name="callback">Action delegate for the callback.</param>
            <param name="state">Items with which to call the callback delegate.</param>
            
            We assume that the WorkItem object is created within the thread
            that meant to run the callback
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItem.StartingWorkItem">
            <summary>
            Change the state of the work item to in progress if it wasn't canceled.
            </summary>
            <returns>
            Return true on success or false in case the work item was canceled.
            If the work item needs to run a post execute then the method will return true.
            </returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItem.Execute">
            <summary>
            Execute the work item and the post execute
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItem.ExecuteWorkItem">
            <summary>
            Execute the work item
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItem.PostExecute">
            <summary>
            Runs the post execute callback
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItem.SetResult(System.Object,System.Exception)">
            <summary>
            Set the result of the work item to return
            </summary>
            <param name="result">The result of the work item</param>
            <param name="exception">The exception that was throw while the workitem executed, null
            if there was no exception.</param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItem.GetWorkItemResult">
            <summary>
            Returns the work item result
            </summary>
            <returns>The work item result</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItem.WaitAll(M2SA.AppGenome.Threading.IWaitableResult[],System.Int32,System.Boolean,System.Threading.WaitHandle)">
            <summary>
            Wait for all work items to complete
            </summary>
            <param name="waitableResults">Array of work item result objects</param>
            <param name="millisecondsTimeout">The number of milliseconds to wait, or Timeout.Infinite (-1) to wait indefinitely.</param>
            <param name="exitContext">
            true to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it; otherwise, false. 
            </param>
            <param name="cancelWaitHandle">A cancel wait handle to interrupt the wait if needed</param>
            <returns>
            true when every work item in waitableResults has completed; otherwise false.
            </returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItem.WaitAny(M2SA.AppGenome.Threading.IWaitableResult[],System.Int32,System.Boolean,System.Threading.WaitHandle)">
            <summary>
            Waits for any of the work items in the specified array to complete, cancel, or timeout
            </summary>
            <param name="waitableResults">Array of work item result objects</param>
            <param name="millisecondsTimeout">The number of milliseconds to wait, or Timeout.Infinite (-1) to wait indefinitely.</param>
            <param name="exitContext">
            true to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it; otherwise, false. 
            </param>
            <param name="cancelWaitHandle">A cancel wait handle to interrupt the wait if needed</param>
            <returns>
            The array index of the work item result that satisfied the wait, or WaitTimeout if no work item result satisfied the wait and a time interval equivalent to millisecondsTimeout has passed or the work item has been canceled.
            </returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItem.GetWaitHandles(M2SA.AppGenome.Threading.IWaitableResult[],System.Threading.WaitHandle[])">
            <summary>
            Fill an array of wait handles with the work items wait handles.
            </summary>
            <param name="waitableResults">An array of work item results</param>
            <param name="waitHandles">An array of wait handles to fill</param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItem.ReleaseWaitHandles(M2SA.AppGenome.Threading.IWaitableResult[])">
            <summary>
            Release the work items' wait handles
            </summary>
            <param name="waitableResults">An array of work item results</param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItem.SetWorkItemState(M2SA.AppGenome.Threading.Internal.WorkItem.WorkItemState)">
            <summary>
            Sets the work item's state
            </summary>
            <param name="workItemState">The state to set the work item to</param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItem.SignalComplete(System.Boolean)">
            <summary>
            Signals that work item has been completed or canceled
            </summary>
            <param name="canceled">Indicates that the work item has been canceled</param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItem.Cancel(System.Boolean)">
            <summary>
            Cancel the work item if it didn't start running yet.
            </summary>
            <returns>Returns true on success or false if the work item is in progress or already completed</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItem.GetResult(System.Int32,System.Boolean,System.Threading.WaitHandle)">
            <summary>
            Get the result of the work item.
            If the work item didn't run yet then the caller waits for the result, timeout, or cancel.
            In case of error the method throws and exception
            </summary>
            <returns>The result of the work item</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItem.GetResult(System.Int32,System.Boolean,System.Threading.WaitHandle,System.Exception@)">
            <summary>
            Get the result of the work item.
            If the work item didn't run yet then the caller waits for the result, timeout, or cancel.
            In case of error the e argument is filled with the exception
            </summary>
            <returns>The result of the work item</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItem.GetWaitHandle">
            <summary>
            A wait handle to wait for completion, cancel, or timeout 
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.Internal.WorkItem.IsCompleted">
            <summary>
            Returns true when the work item has completed or canceled
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.Internal.WorkItem.IsCanceled">
            <summary>
            Returns true when the work item has canceled
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.Internal.WorkItem.WorkItemPriority">
            <summary>
            Returns the priority of the work item
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItem.DisposeOfState">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.WorkItem.WorkItemResult._workItem">
            <summary>
            A back reference to the work item
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.Internal.WorkItem.WorkItemResult.Result">
            <summary>
            Return the result, same as GetResult()
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.Internal.WorkItem.WorkItemResult.Exception">
            <summary>
            Returns the exception if occured otherwise returns null.
            This value is valid only after the work item completed,
            before that it is always null.
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.Threading.Internal.WorkItemFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemFactory.CreateWorkItem(M2SA.AppGenome.Threading.IWorkItemsGroup,M2SA.AppGenome.Threading.WIGStartInfo,M2SA.AppGenome.Threading.WorkItemCallback)">
            <summary>
            Create a new work item
            </summary>
            <param name="workItemsGroup">The WorkItemsGroup of this workitem</param>
            <param name="wigStartInfo">Work item group start information</param>
            <param name="callback">A callback to execute</param>
            <returns>Returns a work item</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemFactory.CreateWorkItem(M2SA.AppGenome.Threading.IWorkItemsGroup,M2SA.AppGenome.Threading.WIGStartInfo,M2SA.AppGenome.Threading.WorkItemCallback,M2SA.AppGenome.Threading.WorkItemPriority)">
            <summary>
            Create a new work item
            </summary>
            <param name="workItemsGroup">The WorkItemsGroup of this workitem</param>
            <param name="wigStartInfo">Work item group start information</param>
            <param name="callback">A callback to execute</param>
            <param name="workItemPriority">The priority of the work item</param>
            <returns>Returns a work item</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemFactory.CreateWorkItem(M2SA.AppGenome.Threading.IWorkItemsGroup,M2SA.AppGenome.Threading.WIGStartInfo,M2SA.AppGenome.Threading.WorkItemInfo,M2SA.AppGenome.Threading.WorkItemCallback)">
            <summary>
            Create a new work item
            </summary>
            <param name="workItemsGroup">The WorkItemsGroup of this workitem</param>
            <param name="wigStartInfo">Work item group start information</param>
            <param name="workItemInfo">Work item info</param>
            <param name="callback">A callback to execute</param>
            <returns>Returns a work item</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemFactory.CreateWorkItem(M2SA.AppGenome.Threading.IWorkItemsGroup,M2SA.AppGenome.Threading.WIGStartInfo,M2SA.AppGenome.Threading.WorkItemCallback,System.Object)">
            <summary>
            Create a new work item
            </summary>
            <param name="workItemsGroup">The WorkItemsGroup of this workitem</param>
            <param name="wigStartInfo">Work item group start information</param>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <returns>Returns a work item</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemFactory.CreateWorkItem(M2SA.AppGenome.Threading.IWorkItemsGroup,M2SA.AppGenome.Threading.WIGStartInfo,M2SA.AppGenome.Threading.WorkItemCallback,System.Object,M2SA.AppGenome.Threading.WorkItemPriority)">
            <summary>
            Create a new work item
            </summary>
            <param name="workItemsGroup">The work items group</param>
            <param name="wigStartInfo">Work item group start information</param>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <param name="workItemPriority">The work item priority</param>
            <returns>Returns a work item</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemFactory.CreateWorkItem(M2SA.AppGenome.Threading.IWorkItemsGroup,M2SA.AppGenome.Threading.WIGStartInfo,M2SA.AppGenome.Threading.WorkItemInfo,M2SA.AppGenome.Threading.WorkItemCallback,System.Object)">
            <summary>
            Create a new work item
            </summary>
            <param name="workItemsGroup">The work items group</param>
            <param name="wigStartInfo">Work item group start information</param>
            <param name="workItemInfo">Work item information</param>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <returns>Returns a work item</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemFactory.CreateWorkItem(M2SA.AppGenome.Threading.IWorkItemsGroup,M2SA.AppGenome.Threading.WIGStartInfo,M2SA.AppGenome.Threading.WorkItemCallback,System.Object,M2SA.AppGenome.Threading.PostExecuteWorkItemCallback)">
            <summary>
            Create a new work item
            </summary>
            <param name="workItemsGroup">The work items group</param>
            <param name="wigStartInfo">Work item group start information</param>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <param name="postExecuteWorkItemCallback">
            A delegate to call after the callback completion
            </param>
            <returns>Returns a work item</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemFactory.CreateWorkItem(M2SA.AppGenome.Threading.IWorkItemsGroup,M2SA.AppGenome.Threading.WIGStartInfo,M2SA.AppGenome.Threading.WorkItemCallback,System.Object,M2SA.AppGenome.Threading.PostExecuteWorkItemCallback,M2SA.AppGenome.Threading.WorkItemPriority)">
            <summary>
            Create a new work item
            </summary>
            <param name="workItemsGroup">The work items group</param>
            <param name="wigStartInfo">Work item group start information</param>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <param name="postExecuteWorkItemCallback">
            A delegate to call after the callback completion
            </param>
            <param name="workItemPriority">The work item priority</param>
            <returns>Returns a work item</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemFactory.CreateWorkItem(M2SA.AppGenome.Threading.IWorkItemsGroup,M2SA.AppGenome.Threading.WIGStartInfo,M2SA.AppGenome.Threading.WorkItemCallback,System.Object,M2SA.AppGenome.Threading.PostExecuteWorkItemCallback,M2SA.AppGenome.Threading.CallToPostExecute)">
            <summary>
            Create a new work item
            </summary>
            <param name="workItemsGroup">The work items group</param>
            <param name="wigStartInfo">Work item group start information</param>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <param name="postExecuteWorkItemCallback">
            A delegate to call after the callback completion
            </param>
            <param name="callToPostExecute">Indicates on which cases to call to the post execute callback</param>
            <returns>Returns a work item</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemFactory.CreateWorkItem(M2SA.AppGenome.Threading.IWorkItemsGroup,M2SA.AppGenome.Threading.WIGStartInfo,M2SA.AppGenome.Threading.WorkItemCallback,System.Object,M2SA.AppGenome.Threading.PostExecuteWorkItemCallback,M2SA.AppGenome.Threading.CallToPostExecute,M2SA.AppGenome.Threading.WorkItemPriority)">
            <summary>
            Create a new work item
            </summary>
            <param name="workItemsGroup">The work items group</param>
            <param name="wigStartInfo">Work item group start information</param>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <param name="postExecuteWorkItemCallback">
            A delegate to call after the callback completion
            </param>
            <param name="callToPostExecute">Indicates on which cases to call to the post execute callback</param>
            <param name="workItemPriority">The work item priority</param>
            <returns>Returns a work item</returns>
        </member>
        <member name="T:M2SA.AppGenome.Threading.Internal.WorkItemsGroup">
            <summary>
            Summary description for WorkItemsGroup.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.WorkItemsGroup._stp">
            <summary>
            A reference to the SmartThreadPool instance that created this 
            WorkItemsGroup.
            </summary>
        </member>
        <member name="E:M2SA.AppGenome.Threading.Internal.WorkItemsGroup._onIdle">
            <summary>
            The OnIdle event
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.WorkItemsGroup._isSuspended">
            <summary>
            A flag to indicate if the Work Items Group is now suspended.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.WorkItemsGroup._concurrency">
            <summary>
            Defines how many work items of this WorkItemsGroup can run at once.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.WorkItemsGroup._workItemsQueue">
            <summary>
            Priority queue to hold work items before they are passed 
            to the SmartThreadPool.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.WorkItemsGroup._workItemsInStpQueue">
            <summary>
            Indicate how many work items are waiting in the SmartThreadPool
            queue.
            This value is used to apply the concurrency.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.WorkItemsGroup._workItemsExecutingInStp">
            <summary>
            Indicate how many work items are currently running in the SmartThreadPool.
            This value is used with the Cancel, to calculate if we can send new 
            work items to the STP.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.WorkItemsGroup._workItemsGroupStartInfo">
            <summary>
            WorkItemsGroup start information
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.WorkItemsGroup._isIdleWaitHandle">
            <summary>
            Signaled when all of the WorkItemsGroup's work item completed.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.WorkItemsGroup._canceledWorkItemsGroup">
            <summary>
            A common object for all the work items that this work items group
            generate so we can mark them to cancel in O(1)
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsGroup.#ctor(M2SA.AppGenome.Threading.SmartThreadPool,System.Int32,M2SA.AppGenome.Threading.WIGStartInfo)">
            <summary>
            
            </summary>
            <param name="stp"></param>
            <param name="concurrency"></param>
            <param name="wigStartInfo"></param>
        </member>
        <member name="P:M2SA.AppGenome.Threading.Internal.WorkItemsGroup.Concurrency">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.Internal.WorkItemsGroup.WaitingCallbacks">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsGroup.GetStates">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:M2SA.AppGenome.Threading.Internal.WorkItemsGroup.WIGStartInfo">
            <summary>
            WorkItemsGroup start information
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsGroup.Start">
            <summary>
            Start the Work Items Group if it was started suspended
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsGroup.Cancel(System.Boolean)">
            <summary>
            
            </summary>
            <param name="abortExecution"></param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsGroup.WaitForIdle(System.Int32)">
            <summary>
            Wait for the thread pool to be idle
            </summary>
        </member>
        <member name="E:M2SA.AppGenome.Threading.Internal.WorkItemsGroup.OnIdle">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsGroup.OnSTPIsStarting">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsGroup.EnqueueToSTPNextNWorkItem(System.Int32)">
            <summary>
            
            </summary>
            <param name="count"></param>
        </member>
        <member name="T:M2SA.AppGenome.Threading.Internal.WorkItemsGroupBase">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.WorkItemsGroupBase._name">
            <summary>
            Contains the name of this instance of SmartThreadPool.
            Can be changed by the user.
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsGroupBase.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.Internal.WorkItemsGroupBase.Name">
            <summary>
            Get/Set the name of the SmartThreadPool/WorkItemsGroup instance
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.Internal.WorkItemsGroupBase.Concurrency">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.Internal.WorkItemsGroupBase.WaitingCallbacks">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsGroupBase.GetStates">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:M2SA.AppGenome.Threading.Internal.WorkItemsGroupBase.WIGStartInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsGroupBase.Start">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsGroupBase.Cancel(System.Boolean)">
            <summary>
            
            </summary>
            <param name="abortExecution"></param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsGroupBase.WaitForIdle(System.Int32)">
            <summary>
            
            </summary>
            <param name="millisecondsTimeout"></param>
            <returns></returns>
        </member>
        <member name="E:M2SA.AppGenome.Threading.Internal.WorkItemsGroupBase.OnIdle">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsGroupBase.Enqueue(M2SA.AppGenome.Threading.Internal.WorkItem)">
            <summary>
            
            </summary>
            <param name="workItem"></param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsGroupBase.PreQueueWorkItem">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsGroupBase.Cancel">
            <summary>
            Cancel all the work items.
            Same as Cancel(false)
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsGroupBase.WaitForIdle">
            <summary>
            Wait for the SmartThreadPool/WorkItemsGroup to be idle
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsGroupBase.WaitForIdle(System.TimeSpan)">
            <summary>
            Wait for the SmartThreadPool/WorkItemsGroup to be idle
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.Internal.WorkItemsGroupBase.IsIdle">
            <summary>
            IsIdle is true when there are no work items running or queued.
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsGroupBase.QueueWorkItem(M2SA.AppGenome.Threading.WorkItemCallback)">
            <summary>
            Queue a work item
            </summary>
            <param name="callback">A callback to execute</param>
            <returns>Returns a work item result</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsGroupBase.QueueWorkItem(M2SA.AppGenome.Threading.WorkItemCallback,M2SA.AppGenome.Threading.WorkItemPriority)">
            <summary>
            Queue a work item
            </summary>
            <param name="callback">A callback to execute</param>
            <param name="workItemPriority">The priority of the work item</param>
            <returns>Returns a work item result</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsGroupBase.QueueWorkItem(M2SA.AppGenome.Threading.WorkItemInfo,M2SA.AppGenome.Threading.WorkItemCallback)">
            <summary>
            Queue a work item
            </summary>
            <param name="workItemInfo">Work item info</param>
            <param name="callback">A callback to execute</param>
            <returns>Returns a work item result</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsGroupBase.QueueWorkItem(M2SA.AppGenome.Threading.WorkItemCallback,System.Object)">
            <summary>
            Queue a work item
            </summary>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <returns>Returns a work item result</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsGroupBase.QueueWorkItem(M2SA.AppGenome.Threading.WorkItemCallback,System.Object,M2SA.AppGenome.Threading.WorkItemPriority)">
            <summary>
            Queue a work item
            </summary>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <param name="workItemPriority">The work item priority</param>
            <returns>Returns a work item result</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsGroupBase.QueueWorkItem(M2SA.AppGenome.Threading.WorkItemInfo,M2SA.AppGenome.Threading.WorkItemCallback,System.Object)">
            <summary>
            Queue a work item
            </summary>
            <param name="workItemInfo">Work item information</param>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <returns>Returns a work item result</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsGroupBase.QueueWorkItem(M2SA.AppGenome.Threading.WorkItemCallback,System.Object,M2SA.AppGenome.Threading.PostExecuteWorkItemCallback)">
            <summary>
            Queue a work item
            </summary>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <param name="postExecuteWorkItemCallback">
            A delegate to call after the callback completion
            </param>
            <returns>Returns a work item result</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsGroupBase.QueueWorkItem(M2SA.AppGenome.Threading.WorkItemCallback,System.Object,M2SA.AppGenome.Threading.PostExecuteWorkItemCallback,M2SA.AppGenome.Threading.WorkItemPriority)">
            <summary>
            Queue a work item
            </summary>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <param name="postExecuteWorkItemCallback">
            A delegate to call after the callback completion
            </param>
            <param name="workItemPriority">The work item priority</param>
            <returns>Returns a work item result</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsGroupBase.QueueWorkItem(M2SA.AppGenome.Threading.WorkItemCallback,System.Object,M2SA.AppGenome.Threading.PostExecuteWorkItemCallback,M2SA.AppGenome.Threading.CallToPostExecute)">
            <summary>
            Queue a work item
            </summary>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <param name="postExecuteWorkItemCallback">
            A delegate to call after the callback completion
            </param>
            <param name="callToPostExecute">Indicates on which cases to call to the post execute callback</param>
            <returns>Returns a work item result</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsGroupBase.QueueWorkItem(M2SA.AppGenome.Threading.WorkItemCallback,System.Object,M2SA.AppGenome.Threading.PostExecuteWorkItemCallback,M2SA.AppGenome.Threading.CallToPostExecute,M2SA.AppGenome.Threading.WorkItemPriority)">
            <summary>
            Queue a work item
            </summary>
            <param name="callback">A callback to execute</param>
            <param name="state">
            The context object of the work item. Used for passing arguments to the work item. 
            </param>
            <param name="postExecuteWorkItemCallback">
            A delegate to call after the callback completion
            </param>
            <param name="callToPostExecute">Indicates on which cases to call to the post execute callback</param>
            <param name="workItemPriority">The work item priority</param>
            <returns>Returns a work item result</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsGroupBase.QueueWorkItem(System.Action)">
            <summary>
            
            </summary>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsGroupBase.QueueWorkItem``1(System.Action{``0},``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="action"></param>
            <param name="arg"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsGroupBase.QueueWorkItem``2(System.Action{``0,``1},``0,``1)">
            <summary>
            
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <param name="action"></param>
            <param name="arg1"></param>
            <param name="arg2"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsGroupBase.QueueWorkItem``3(System.Action{``0,``1,``2},``0,``1,``2)">
            <summary>
            
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <param name="action"></param>
            <param name="arg1"></param>
            <param name="arg2"></param>
            <param name="arg3"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsGroupBase.QueueWorkItem``4(System.Action{``0,``1,``2,``3},``0,``1,``2,``3)">
            <summary>
            
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <param name="action"></param>
            <param name="arg1"></param>
            <param name="arg2"></param>
            <param name="arg3"></param>
            <param name="arg4"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsGroupBase.QueueWorkItem``1(System.Func{``0})">
            <summary>
            
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsGroupBase.QueueWorkItem``2(System.Func{``0,``1},``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="func"></param>
            <param name="arg"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsGroupBase.QueueWorkItem``3(System.Func{``0,``1,``2},``0,``1)">
            <summary>
            
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="func"></param>
            <param name="arg1"></param>
            <param name="arg2"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsGroupBase.QueueWorkItem``4(System.Func{``0,``1,``2,``3},``0,``1,``2)">
            <summary>
            
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="func"></param>
            <param name="arg1"></param>
            <param name="arg2"></param>
            <param name="arg3"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsGroupBase.QueueWorkItem``5(System.Func{``0,``1,``2,``3,``4},``0,``1,``2,``3)">
            <summary>
            
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="func"></param>
            <param name="arg1"></param>
            <param name="arg2"></param>
            <param name="arg3"></param>
            <param name="arg4"></param>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.Threading.Internal.WorkItemsQueue">
            <summary>
            WorkItemsQueue class.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.WorkItemsQueue._headWaiterEntry">
            <summary>
            Waiters queue (implemented as stack).
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.WorkItemsQueue._waitersCount">
            <summary>
            Waiters count
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.WorkItemsQueue._workItems">
            <summary>
            Work items queue
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.WorkItemsQueue._isWorkItemsQueueActive">
            <summary>
            Indicate that work items are allowed to be queued
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.Internal.WorkItemsQueue.CurrentWaiterEntry">
            <summary>
            Each thread in the thread pool keeps its own waiter entry.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.WorkItemsQueue._isDisposed">
            <summary>
            A flag that indicates if the WorkItemsQueue has been disposed.
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.Internal.WorkItemsQueue.Count">
            <summary>
            Returns the current number of work items in the queue
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.Internal.WorkItemsQueue.WaitersCount">
            <summary>
            Returns the current number of waiters
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsQueue.EnqueueWorkItem(M2SA.AppGenome.Threading.Internal.WorkItem)">
            <summary>
            Enqueue a work item to the queue.
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsQueue.DequeueWorkItem(System.Int32,System.Threading.WaitHandle)">
            <summary>
            Waits for a work item or exits on timeout or cancel
            </summary>
            <param name="millisecondsTimeout">Timeout in milliseconds</param>
            <param name="cancelEvent">Cancel wait handle</param>
            <returns>Returns true if the resource was granted</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsQueue.Cleanup">
            <summary>
            Cleanup the work items queue, hence no more work 
            items are allowed to be queue
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsQueue.GetStates">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsQueue.GetThreadWaiterEntry">
            <summary>
            Returns the WaiterEntry of the current thread
            </summary>
            <returns></returns>
            In order to avoid creation and destuction of WaiterEntry
            objects each thread has its own WaiterEntry object.
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsQueue.PushWaiter(M2SA.AppGenome.Threading.Internal.WorkItemsQueue.WaiterEntry)">
            <summary>
            Push a new waiter into the waiter's stack
            </summary>
            <param name="newWaiterEntry">A waiter to put in the stack</param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsQueue.PopWaiter">
            <summary>
            Pop a waiter from the waiter's stack
            </summary>
            <returns>Returns the first waiter in the stack</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsQueue.RemoveWaiter(M2SA.AppGenome.Threading.Internal.WorkItemsQueue.WaiterEntry,System.Boolean)">
            <summary>
            Remove a waiter from the stack
            </summary>
            <param name="waiterEntry">A waiter entry to remove</param>
            <param name="popDecrement">If true the waiter count is always decremented</param>
        </member>
        <member name="T:M2SA.AppGenome.Threading.Internal.WorkItemsQueue.WaiterEntry">
            <summary>
            A waiter entry in the _waiters queue.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.WorkItemsQueue.WaiterEntry._waitHandle">
            <summary>
            Event to signal the waiter that it got the work item.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.WorkItemsQueue.WaiterEntry._isTimedout">
            <summary>
            Flag to know if this waiter already quited from the queue 
            because of a timeout.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.WorkItemsQueue.WaiterEntry._isSignaled">
            <summary>
            Flag to know if the waiter was signaled and got a work item. 
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.Internal.WorkItemsQueue.WaiterEntry._workItem">
            <summary>
            A work item that passed directly to the waiter withou going 
            through the queue
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsQueue.WaiterEntry.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.Internal.WorkItemsQueue.WaiterEntry.WaitHandle">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.Internal.WorkItemsQueue.WaiterEntry.WorkItem">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsQueue.WaiterEntry.Signal(M2SA.AppGenome.Threading.Internal.WorkItem)">
            <summary>
            Signal the waiter that it got a work item.
            </summary>
            <returns>Return true on success</returns>
            The method fails if Timeout() preceded its call
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsQueue.WaiterEntry.Timeout">
            <summary>
            Mark the wait entry that it has been timed out
            </summary>
            <returns>Return true on success</returns>
            The method fails if Signal() preceded its call
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsQueue.WaiterEntry.Reset">
            <summary>
            Reset the wait entry so it can be used again
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsQueue.WaiterEntry.Close">
            <summary>
            Free resources
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsQueue.WaiterEntry.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.Internal.WorkItemsQueue.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.Threading.ISTPPerformanceCountersReader">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.ISTPPerformanceCountersReader.InUseThreads">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.ISTPPerformanceCountersReader.ActiveThreads">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.ISTPPerformanceCountersReader.WorkItemsQueued">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.ISTPPerformanceCountersReader.WorkItemsProcessed">
            <summary>
            
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.Threading.ITaskAction">
            <summary>
            后台任务接口
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.ITaskAction.CanCancel">
            <summary>
            是否可以被取消
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.ITaskAction.Invoke">
            <summary>
            执行方法
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.ITaskAction.Trigger(System.TimeSpan)">
            <summary>
            是否触发
            </summary>
            <param name="waitInterval"></param>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.Threading.ITaskActionGroup`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:M2SA.AppGenome.Threading.ITaskActionGroup`1.Enqueue(`0)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="T:M2SA.AppGenome.Threading.SmartThreadPool">
            <summary>
            Smart thread pool class.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.SmartThreadPool.DefaultUseCallerCallContext">
            <summary>
            Indicate to copy the security context of the caller and then use it in the call. (false)
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.SmartThreadPool.DefaultUseCallerHttpContext">
            <summary>
            Indicate to copy the HTTP context of the caller and then use it in the call. (false)
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.SmartThreadPool.DefaultDisposeOfStateObjects">
            <summary>
            Indicate to dispose of the state objects if they support the IDispose interface. (false)
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.SmartThreadPool.DefaultCallToPostExecute">
            <summary>
            The default option to run the post execute (CallToPostExecute.Always)
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.SmartThreadPool.DefaultPostExecuteWorkItemCallback">
            <summary>
            The default post execute method to run. (None)
            When null it means not to call it.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.SmartThreadPool.DefaultWorkItemPriority">
            <summary>
            The default work item priority (WorkItemPriority.Normal)
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.SmartThreadPool.DefaultStartSuspended">
            <summary>
            The default is to work on work items as soon as they arrive
            and not to wait for the start. (false)
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.SmartThreadPool.DefaultPerformanceCounterInstanceName">
            <summary>
            The default name to use for the performance counters instance. (null)
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.SmartThreadPool.DefaultThreadPriority">
            <summary>
            The default thread priority (ThreadPriority.Normal)
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.SmartThreadPool.DefaultFillStateWithArgs">
            <summary>
            The default fill state with params. (false)
            It is relevant only to QueueWorkItem of Action[...]/Func[...]
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.SmartThreadPool._workerThreads">
            <summary>
            Dictionary of all the threads in the thread pool.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.SmartThreadPool._workItemsQueue">
            <summary>
            Queue of work items.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.SmartThreadPool._workItemsProcessed">
            <summary>
            Count the work items handled.
            Used by the performance counter.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.SmartThreadPool._inUseWorkerThreads">
            <summary>
            Number of threads that currently work (not idle).
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.SmartThreadPool._stpStartInfo">
            <summary>
            Stores a copy of the original STPStartInfo.
            It is used to change the MinThread and MaxThreads
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.SmartThreadPool._currentWorkItemsCount">
            <summary>
            Total number of work items that are stored in the work items queue 
            plus the work items that the threads in the pool are working on.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.SmartThreadPool._isIdleWaitHandle">
            <summary>
            Signaled when the thread pool is idle, i.e. no thread is busy
            and the work items queue is empty
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.SmartThreadPool._shuttingDownEvent">
            <summary>
            An event to signal all the threads to quit immediately.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.SmartThreadPool._isSuspended">
            <summary>
            A flag to indicate if the Smart Thread Pool is now suspended.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.SmartThreadPool._shutdown">
            <summary>
            A flag to indicate the threads to quit.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.SmartThreadPool._threadCounter">
            <summary>
            Counts the threads created in the pool.
            It is used to name the threads.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.SmartThreadPool._isDisposed">
            <summary>
            Indicate that the SmartThreadPool has been disposed
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.SmartThreadPool._workItemsGroups">
            <summary>
            Holds all the WorkItemsGroup instaces that have at least one 
            work item int the SmartThreadPool
            This variable is used in case of Shutdown
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.SmartThreadPool._canceledSmartThreadPool">
            <summary>
            A common object for all the work items int the STP
            so we can mark them to cancel in O(1)
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.SmartThreadPool._windowsPCs">
            <summary>
            Windows STP performance counters
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.SmartThreadPool._localPCs">
            <summary>
            Local STP performance counters
            </summary>
        </member>
        <member name="E:M2SA.AppGenome.Threading.SmartThreadPool._onThreadInitialization">
            <summary>
            An event to call after a thread is created, but before 
            it's first use.
            </summary>
        </member>
        <member name="E:M2SA.AppGenome.Threading.SmartThreadPool._onThreadTermination">
            <summary>
            An event to call when a thread is about to exit, after 
            it is no longer belong to the pool.
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.SmartThreadPool.CurrentThreadEntry">
            <summary>
            A reference to the current work item a thread from the thread pool 
            is executing.
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.SmartThreadPool.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.SmartThreadPool.#ctor(System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="idleTimeout">Idle timeout in milliseconds</param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.SmartThreadPool.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="idleTimeout">Idle timeout in milliseconds</param>
            <param name="maxWorkerThreads">Upper limit of threads in the pool</param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.SmartThreadPool.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="idleTimeout">Idle timeout in milliseconds</param>
            <param name="maxWorkerThreads">Upper limit of threads in the pool</param>
            <param name="minWorkerThreads">Lower limit of threads in the pool</param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.SmartThreadPool.#ctor(M2SA.AppGenome.Threading.STPStartInfo)">
            <summary>
            Constructor
            </summary>
            <param name="stpStartInfo">A SmartThreadPool configuration that overrides the default behavior</param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.SmartThreadPool.Dequeue">
            <summary>
            Waits on the queue for a work item, shutdown, or timeout.
            </summary>
            <returns>
            Returns the WaitingCallback or null in case of timeout or shutdown.
            </returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.SmartThreadPool.Enqueue(M2SA.AppGenome.Threading.Internal.WorkItem)">
            <summary>
            Put a new work item in the queue
            </summary>
            <param name="workItem">A work item to queue</param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.SmartThreadPool.InformCompleted">
            <summary>
            Inform that the current thread is about to quit or quiting.
            The same thread may call this method more than once.
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.SmartThreadPool.StartThreads(System.Int32)">
            <summary>
            Starts new threads
            </summary>
            <param name="threadsCount">The number of threads to start</param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.SmartThreadPool.ProcessQueuedItems">
            <summary>
            A worker thread method that processes work items from the work items queue.
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.SmartThreadPool.Shutdown">
            <summary>
            Force the SmartThreadPool to shutdown
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.SmartThreadPool.Shutdown(System.Boolean,System.TimeSpan)">
            <summary>
            Force the SmartThreadPool to shutdown with timeout
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.SmartThreadPool.Shutdown(System.Boolean,System.Int32)">
            <summary>
            Empties the queue of work items and abort the threads in the pool.
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.SmartThreadPool.WaitAll(M2SA.AppGenome.Threading.IWaitableResult[])">
            <summary>
            Wait for all work items to complete
            </summary>
            <param name="waitableResults">Array of work item result objects</param>
            <returns>
            true when every work item in workItemResults has completed; otherwise false.
            </returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.SmartThreadPool.WaitAll(M2SA.AppGenome.Threading.IWaitableResult[],System.TimeSpan,System.Boolean)">
            <summary>
            Wait for all work items to complete
            </summary>
            <param name="waitableResults">Array of work item result objects</param>
            <param name="timeout">The number of milliseconds to wait, or a TimeSpan that represents -1 milliseconds to wait indefinitely. </param>
            <param name="exitContext">
            true to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it; otherwise, false. 
            </param>
            <returns>
            true when every work item in workItemResults has completed; otherwise false.
            </returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.SmartThreadPool.WaitAll(M2SA.AppGenome.Threading.IWaitableResult[],System.TimeSpan,System.Boolean,System.Threading.WaitHandle)">
            <summary>
            Wait for all work items to complete
            </summary>
            <param name="waitableResults">Array of work item result objects</param>
            <param name="timeout">The number of milliseconds to wait, or a TimeSpan that represents -1 milliseconds to wait indefinitely. </param>
            <param name="exitContext">
            true to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it; otherwise, false. 
            </param>
            <param name="cancelWaitHandle">A cancel wait handle to interrupt the wait if needed</param>
            <returns>
            true when every work item in workItemResults has completed; otherwise false.
            </returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.SmartThreadPool.WaitAll(M2SA.AppGenome.Threading.IWaitableResult[],System.Int32,System.Boolean)">
            <summary>
            Wait for all work items to complete
            </summary>
            <param name="waitableResults">Array of work item result objects</param>
            <param name="millisecondsTimeout">The number of milliseconds to wait, or Timeout.Infinite (-1) to wait indefinitely.</param>
            <param name="exitContext">
            true to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it; otherwise, false. 
            </param>
            <returns>
            true when every work item in workItemResults has completed; otherwise false.
            </returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.SmartThreadPool.WaitAll(M2SA.AppGenome.Threading.IWaitableResult[],System.Int32,System.Boolean,System.Threading.WaitHandle)">
            <summary>
            Wait for all work items to complete
            </summary>
            <param name="waitableResults">Array of work item result objects</param>
            <param name="millisecondsTimeout">The number of milliseconds to wait, or Timeout.Infinite (-1) to wait indefinitely.</param>
            <param name="exitContext">
            true to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it; otherwise, false. 
            </param>
            <param name="cancelWaitHandle">A cancel wait handle to interrupt the wait if needed</param>
            <returns>
            true when every work item in workItemResults has completed; otherwise false.
            </returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.SmartThreadPool.WaitAny(M2SA.AppGenome.Threading.IWaitableResult[])">
            <summary>
            Waits for any of the work items in the specified array to complete, cancel, or timeout
            </summary>
            <param name="waitableResults">Array of work item result objects</param>
            <returns>
            The array index of the work item result that satisfied the wait, or WaitTimeout if any of the work items has been canceled.
            </returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.SmartThreadPool.WaitAny(M2SA.AppGenome.Threading.IWaitableResult[],System.TimeSpan,System.Boolean)">
            <summary>
            Waits for any of the work items in the specified array to complete, cancel, or timeout
            </summary>
            <param name="waitableResults">Array of work item result objects</param>
            <param name="timeout">The number of milliseconds to wait, or a TimeSpan that represents -1 milliseconds to wait indefinitely. </param>
            <param name="exitContext">
            true to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it; otherwise, false. 
            </param>
            <returns>
            The array index of the work item result that satisfied the wait, or WaitTimeout if no work item result satisfied the wait and a time interval equivalent to millisecondsTimeout has passed or the work item has been canceled.
            </returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.SmartThreadPool.WaitAny(M2SA.AppGenome.Threading.IWaitableResult[],System.TimeSpan,System.Boolean,System.Threading.WaitHandle)">
            <summary>
            Waits for any of the work items in the specified array to complete, cancel, or timeout
            </summary>
            <param name="waitableResults">Array of work item result objects</param>
            <param name="timeout">The number of milliseconds to wait, or a TimeSpan that represents -1 milliseconds to wait indefinitely. </param>
            <param name="exitContext">
            true to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it; otherwise, false. 
            </param>
            <param name="cancelWaitHandle">A cancel wait handle to interrupt the wait if needed</param>
            <returns>
            The array index of the work item result that satisfied the wait, or WaitTimeout if no work item result satisfied the wait and a time interval equivalent to millisecondsTimeout has passed or the work item has been canceled.
            </returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.SmartThreadPool.WaitAny(M2SA.AppGenome.Threading.IWaitableResult[],System.Int32,System.Boolean)">
            <summary>
            Waits for any of the work items in the specified array to complete, cancel, or timeout
            </summary>
            <param name="waitableResults">Array of work item result objects</param>
            <param name="millisecondsTimeout">The number of milliseconds to wait, or Timeout.Infinite (-1) to wait indefinitely.</param>
            <param name="exitContext">
            true to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it; otherwise, false. 
            </param>
            <returns>
            The array index of the work item result that satisfied the wait, or WaitTimeout if no work item result satisfied the wait and a time interval equivalent to millisecondsTimeout has passed or the work item has been canceled.
            </returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.SmartThreadPool.WaitAny(M2SA.AppGenome.Threading.IWaitableResult[],System.Int32,System.Boolean,System.Threading.WaitHandle)">
            <summary>
            Waits for any of the work items in the specified array to complete, cancel, or timeout
            </summary>
            <param name="waitableResults">Array of work item result objects</param>
            <param name="millisecondsTimeout">The number of milliseconds to wait, or Timeout.Infinite (-1) to wait indefinitely.</param>
            <param name="exitContext">
            true to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it; otherwise, false. 
            </param>
            <param name="cancelWaitHandle">A cancel wait handle to interrupt the wait if needed</param>
            <returns>
            The array index of the work item result that satisfied the wait, or WaitTimeout if no work item result satisfied the wait and a time interval equivalent to millisecondsTimeout has passed or the work item has been canceled.
            </returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.SmartThreadPool.CreateWorkItemsGroup(System.Int32)">
            <summary>
            Creates a new WorkItemsGroup.
            </summary>
            <param name="concurrency">The number of work items that can be run concurrently</param>
            <returns>A reference to the WorkItemsGroup</returns>
        </member>
        <member name="M:M2SA.AppGenome.Threading.SmartThreadPool.CreateWorkItemsGroup(System.Int32,M2SA.AppGenome.Threading.WIGStartInfo)">
            <summary>
            Creates a new WorkItemsGroup.
            </summary>
            <param name="concurrency">The number of work items that can be run concurrently</param>
            <param name="wigStartInfo">A WorkItemsGroup configuration that overrides the default behavior</param>
            <returns>A reference to the WorkItemsGroup</returns>
        </member>
        <member name="E:M2SA.AppGenome.Threading.SmartThreadPool.OnThreadInitialization">
            <summary>
            This event is fired when a thread is created.
            Use it to initialize a thread before the work items use it.
            </summary>
        </member>
        <member name="E:M2SA.AppGenome.Threading.SmartThreadPool.OnThreadTermination">
            <summary>
            This event is fired when a thread is terminating.
            Use it for cleanup.
            </summary>        
        </member>
        <member name="P:M2SA.AppGenome.Threading.SmartThreadPool.MinThreads">
            <summary>
            Get/Set the lower limit of threads in the pool.
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.SmartThreadPool.MaxThreads">
            <summary>
            Get/Set the upper limit of threads in the pool.
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.SmartThreadPool.ActiveThreads">
            <summary>
            Get the number of threads in the thread pool.
            Should be between the lower and the upper limits.
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.SmartThreadPool.InUseThreads">
            <summary>
            Get the number of busy (not idle) threads in the thread pool.
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.SmartThreadPool.IsWorkItemCanceled">
            <summary>
            Returns true if the current running work item has been cancelled.
            Must be used within the work item's callback method.
            The work item should sample this value in order to know if it
            needs to quit before its completion.
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.SmartThreadPool.AbortOnWorkItemCancel">
            <summary>
            Checks if the work item has been cancelled, and if yes then abort the thread.
            Can be used with Cancel and timeout
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.SmartThreadPool.STPStartInfo">
            <summary>
            Thread Pool start information (readonly)
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.SmartThreadPool.IsShuttingdown">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.SmartThreadPool.PerformanceCountersReader">
            <summary>
            Return the local calculated performance counters
            Available only if STPStartInfo.EnableLocalPerformanceCounters is true.
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.SmartThreadPool.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.SmartThreadPool.Concurrency">
            <summary>
            Get/Set the maximum number of work items that execute cocurrency on the thread pool
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.SmartThreadPool.WaitingCallbacks">
            <summary>
            Get the number of work items in the queue.
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.SmartThreadPool.GetStates">
            <summary>
            Get an array with all the state objects of the currently running items.
            The array represents a snap shot and impact performance.
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.SmartThreadPool.WIGStartInfo">
            <summary>
            WorkItemsGroup start information (readonly)
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.SmartThreadPool.Start">
            <summary>
            Start the thread pool if it was started suspended.
            If it is already running, this method is ignored.
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.SmartThreadPool.Cancel(System.Boolean)">
            <summary>
            Cancel all work items using thread abortion
            </summary>
            <param name="abortExecution">True to stop work items by raising ThreadAbortException</param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.SmartThreadPool.WaitForIdle(System.Int32)">
            <summary>
            Wait for the thread pool to be idle
            </summary>
        </member>
        <member name="E:M2SA.AppGenome.Threading.SmartThreadPool.OnIdle">
            <summary>
            This event is fired when all work items are completed.
            (When IsIdle changes to true)
            This event only work on WorkItemsGroup. On SmartThreadPool
            it throws the NotImplementedException.
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.SmartThreadPool.Join(System.Collections.Generic.IEnumerable{System.Action})">
            <summary>
            Executes all actions in parallel.
            Returns when they all finish.
            </summary>
            <param name="actions">Actions to execute</param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.SmartThreadPool.Join(System.Action[])">
            <summary>
            Executes all actions in parallel.
            Returns when they all finish.
            </summary>
            <param name="actions">Actions to execute</param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.SmartThreadPool.Choice(System.Collections.Generic.IEnumerable{System.Action})">
            <summary>
            Executes all actions in parallel
            Returns when the first one completes
            </summary>
            <param name="actions">Actions to execute</param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.SmartThreadPool.Choice(System.Action[])">
            <summary>
            Executes all actions in parallel
            Returns when the first one completes
            </summary>
            <param name="actions">Actions to execute</param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.SmartThreadPool.Pipe``1(``0,System.Collections.Generic.IEnumerable{System.Action{``0}})">
            <summary>
            Executes actions in sequence asynchronously.
            Returns immediately.
            </summary>
            <param name="pipeState">A state context that passes </param>
            <param name="actions">Actions to execute in the order they should run</param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.SmartThreadPool.Pipe``1(``0,System.Action{``0}[])">
            <summary>
            Executes actions in sequence asynchronously.
            Returns immediately.
            </summary>
            <param name="pipeState"></param>
            <param name="actions">Actions to execute in the order they should run</param>
        </member>
        <member name="F:M2SA.AppGenome.Threading.SmartThreadPool.ThreadEntry._creationTime">
            <summary>
            The thread creation time
            The value is stored as UTC value.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.SmartThreadPool.ThreadEntry._lastAliveTime">
            <summary>
            The last time this thread has been running
            It is updated by IAmAlive() method
            The value is stored as UTC value.
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Threading.SmartThreadPool.ThreadEntry._associatedSmartThreadPool">
            <summary>
            A reference from each thread in the thread pool to its SmartThreadPool
            object container.
            With this variable a thread can know whatever it belongs to a 
            SmartThreadPool.
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.SmartThreadPool.ThreadEntry.CurrentWorkItem">
            <summary>
            A reference to the current work item a thread from the thread pool 
            is executing.
            </summary>            
        </member>
        <member name="T:M2SA.AppGenome.Threading.STPStartInfo">
            <summary>
            Summary description for STPStartInfo.
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.STPStartInfo.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.STPStartInfo.#ctor(M2SA.AppGenome.Threading.STPStartInfo)">
            <summary>
            
            </summary>
            <param name="stpStartInfo"></param>
        </member>
        <member name="P:M2SA.AppGenome.Threading.STPStartInfo.IdleTimeout">
            <summary>
            Get/Set the idle timeout in milliseconds.
            If a thread is idle (starved) longer than IdleTimeout then it may quit.
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.STPStartInfo.MinWorkerThreads">
            <summary>
            Get/Set the lower limit of threads in the pool.
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.STPStartInfo.MaxWorkerThreads">
            <summary>
            Get/Set the upper limit of threads in the pool.
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.STPStartInfo.ThreadPriority">
            <summary>
            Get/Set the scheduling priority of the threads in the pool.
            The Os handles the scheduling.
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.STPStartInfo.PerformanceCounterInstanceName">
            <summary>
            Get/Set the performance counter instance name of this SmartThreadPool
            The default is null which indicate not to use performance counters at all.
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.STPStartInfo.EnableLocalPerformanceCounters">
            <summary>
            IsRunning/Disable the local performance counter.
            This enables the user to get some performance information about the SmartThreadPool 
            without using Windows performance counters. (Useful on WindowsCE, Silverlight, etc.)
            The default is false.
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.STPStartInfo.AsReadOnly">
            <summary>
            Get a readonly version of this STPStartInfo.
            </summary>
            <returns>Returns a readonly reference to this STPStartInfo</returns>
        </member>
        <member name="T:M2SA.AppGenome.Threading.TaskActionGroup`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:M2SA.AppGenome.Threading.TaskActionGroup`1.CanCancel">
            <summary>
            是否可以被取消
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.TaskActionGroup`1.Concurrency">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.TaskActionGroup`1.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.TaskActionGroup`1.Action">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.TaskActionGroup`1.Items">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.TaskActionGroup`1.PocessInterval">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.TaskActionGroup`1.#ctor(System.String,System.TimeSpan,System.Action{`0},System.Boolean)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="pocessInterval"></param>
            <param name="action"></param>
            <param name="canCancel"></param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.TaskActionGroup`1.#ctor(System.String,System.TimeSpan,System.Action{`0},System.Boolean,System.Int32)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="pocessInterval"></param>
            <param name="action"></param>
            <param name="canCancel"></param>
            <param name="concurrency"></param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.TaskActionGroup`1.Enqueue(`0)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.TaskActionGroup`1.Invoke">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.TaskActionGroup`1.Trigger(System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="waitInterval"></param>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.Threading.TaskProcessor">
            <summary>
            后台任务处理器
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.TaskProcessor.AsyncStart">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.TaskProcessor.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.TaskProcessor.RegisterAction``1(System.String,System.Action{``0})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="name"></param>
            <param name="action"></param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.TaskProcessor.RegisterAction``1(System.String,System.Action{``0},System.TimeSpan)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="name"></param>        
            <param name="action"></param>
            <param name="pocessInterval"></param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.TaskProcessor.RegisterAction``1(System.String,System.Action{``0},System.TimeSpan,System.Boolean)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="name"></param>
            <param name="action"></param>
            <param name="pocessInterval"></param>
            <param name="canCancel"></param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.TaskProcessor.RegisterAction``1(System.String,System.Action{``0},System.TimeSpan,System.Boolean,System.Int32)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="name"></param>
            <param name="action"></param>
            <param name="pocessInterval"></param>
            <param name="canCancel"></param>
            <param name="concurrency"></param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.TaskProcessor.RegisterAction(System.String,M2SA.AppGenome.Threading.ITaskAction)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="taskAction"></param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.TaskProcessor.Process``1(System.String,``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="name"></param>
            <param name="item"></param>
        </member>
        <member name="T:M2SA.AppGenome.Threading.TimeAction">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.TimeAction.CanCancel">
            <summary>
            是否可以被取消
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.TimeAction.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.TimeAction.Action">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.TimeAction.Concurrency">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.TimeAction.#ctor(System.String,System.String,System.Action{System.DateTime},System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="cronExpressionValue"></param>
            <param name="action"></param>
            <param name="concurrency"></param>
            <param name="canCancel"></param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.TimeAction.#ctor(System.String,System.String,System.Action{System.DateTime})">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="cronExpressionValue"></param>
            <param name="action"></param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.TimeAction.#ctor(System.String,System.String,System.Action{System.DateTime},System.Int32)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="cronExpressionValue"></param>
            <param name="action"></param>
            <param name="concurrency"></param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.TimeAction.#ctor(System.String,System.TimeSpan,System.Action{System.DateTime},System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="pocessInterval"></param>
            <param name="action"></param>
            <param name="concurrency"></param>
            <param name="canCancel"></param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.TimeAction.#ctor(System.String,System.TimeSpan,System.Action{System.DateTime})">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="pocessInterval"></param>
            <param name="action"></param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.TimeAction.#ctor(System.String,System.TimeSpan,System.Action{System.DateTime},System.Int32)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="pocessInterval"></param>
            <param name="action"></param>
            <param name="concurrency"></param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.TimeAction.Invoke">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.TimeAction.Trigger(System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="waitInterval"></param>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.Threading.WIGStartInfo">
            <summary>
            Summary description for WIGStartInfo.
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.WIGStartInfo.ReadOnly">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.WIGStartInfo.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.WIGStartInfo.#ctor(M2SA.AppGenome.Threading.WIGStartInfo)">
            <summary>
            
            </summary>
            <param name="wigStartInfo"></param>
        </member>
        <member name="M:M2SA.AppGenome.Threading.WIGStartInfo.ThrowIfReadOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.WIGStartInfo.UseCallerCallContext">
            <summary>
            Get/Set if to use the caller's security context
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.WIGStartInfo.UseCallerHttpContext">
            <summary>
            Get/Set if to use the caller's HTTP context
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.WIGStartInfo.DisposeOfStateObjects">
            <summary>
            Get/Set if to dispose of the state object of a work item
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.WIGStartInfo.CallToPostExecute">
            <summary>
            Get/Set the run the post execute options
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.WIGStartInfo.PostExecuteWorkItemCallback">
            <summary>
            Get/Set the default post execute callback
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.WIGStartInfo.StartSuspended">
            <summary>
            Get/Set if the work items execution should be suspended until the Start()
            method is called.
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.WIGStartInfo.WorkItemPriority">
            <summary>
            Get/Set the default priority that a work item gets when it is enqueued
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.WIGStartInfo.FillStateWithArgs">
            <summary>
            Get/Set the if QueueWorkItem of Action[...]/Func[...] fill the
            arguments as an object array into the state of the work item.
            The arguments can be access later by IWorkItemResult.Items.
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.WIGStartInfo.AsReadOnly">
            <summary>
            Get a readonly version of this WIGStartInfo
            </summary>
            <returns>Returns a readonly reference to this WIGStartInfoRO</returns>
        </member>
        <member name="T:M2SA.AppGenome.Threading.WorkItemInfo">
            <summary>
            Summary description for WorkItemInfo.
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.WorkItemInfo.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Threading.WorkItemInfo.#ctor(M2SA.AppGenome.Threading.WorkItemInfo)">
            <summary>
            
            </summary>
            <param name="workItemInfo"></param>
        </member>
        <member name="P:M2SA.AppGenome.Threading.WorkItemInfo.UseCallerCallContext">
            <summary>
            Get/Set if to use the caller's security context
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.WorkItemInfo.UseCallerHttpContext">
            <summary>
            Get/Set if to use the caller's HTTP context
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.WorkItemInfo.DisposeOfStateObjects">
            <summary>
            Get/Set if to dispose of the state object of a work item
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.WorkItemInfo.CallToPostExecute">
            <summary>
            Get/Set the run the post execute options
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.WorkItemInfo.PostExecuteWorkItemCallback">
            <summary>
            Get/Set the post execute callback
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.WorkItemInfo.WorkItemPriority">
            <summary>
            Get/Set the work item's priority
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Threading.WorkItemInfo.Timeout">
            <summary>
            Get/Set the work item's timout in milliseconds.
            This is a passive timout. When the timout expires the work item won't be actively aborted!
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.Timestamp">
            <summary>
            
            </summary>
        </member>
        <member name="F:M2SA.AppGenome.Timestamp.ZeroTime">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Timestamp.ToTimestamp(System.DateTime)">
            <summary>
            
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Timestamp.ToDateTime(System.Int64)">
            <summary>
            
            </summary>
            <param name="timestamp"></param>
            <returns></returns>
        </member>
        <member name="T:M2SA.AppGenome.Web.AppGenomeModule">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Web.AppGenomeModule.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Web.AppGenomeModule.Init(System.Web.HttpApplication)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:M2SA.AppGenome.Web.HostileRequestException">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Web.HostileRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:M2SA.AppGenome.Web.HostileRequestException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:M2SA.AppGenome.Web.HostileRequestException.#ctor(System.Exception)">
            <summary>
            
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:M2SA.AppGenome.Web.HostileRequestException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:M2SA.AppGenome.Web.HostileRequestException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:M2SA.AppGenome.Web.HttpBrowserInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Web.HttpBrowserInfo.Browser">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Web.HttpBrowserInfo.BrowserType">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Web.HttpBrowserInfo.Platform">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Web.HttpBrowserInfo.IsMobileDevice">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Web.HttpBrowserInfo.Crawler">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Web.HttpBrowserInfo.MajorVersion">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Web.HttpBrowserInfo.MinorVersion">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Web.HttpBrowserInfo.#ctor(System.Web.HttpBrowserCapabilities)">
            <summary>
            
            </summary>
            <param name="browser"></param>
        </member>
        <member name="T:M2SA.AppGenome.Web.HttpCookieInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Web.HttpCookieInfo.Domain">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Web.HttpCookieInfo.Expires">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Web.HttpCookieInfo.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Web.HttpCookieInfo.Path">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Web.HttpCookieInfo.Secure">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Web.HttpCookieInfo.HttpOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Web.HttpCookieInfo.Value">
            <summary>
            
            </summary>
        </member>
        <member name="P:M2SA.AppGenome.Web.HttpCookieInfo.Values">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Web.HttpCookieInfo.#ctor(System.Web.HttpCookie)">
            <summary>
            
            </summary>
            <param name="cookie"></param>
        </member>
        <member name="T:M2SA.AppGenome.Web.HttpValidator">
            <summary>
            
            </summary>
        </member>
        <member name="M:M2SA.AppGenome.Web.HttpValidator.IsCrawlerRequest(System.Web.HttpRequest)">
            <summary>
            是否是爬虫请求
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Web.HttpValidator.GetMaxRequestLength">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:M2SA.AppGenome.Web.HttpValidator.ExceededMaximumRequestLength(System.Web.HttpRequest)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
    </members>
</doc>
